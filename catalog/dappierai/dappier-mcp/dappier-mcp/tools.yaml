tools:
  - name: dappier_real_time_search
    description: "

      \    Retrieve real-time search data from Dappier by processing an AI model
      that supports two key capabilities:


      \    - Real-Time Web Search: \ 

      \    Access the latest news, stock market data, weather, travel
      information, deals, and more using model `am_01j06ytn18ejftedz6dyhz2b15`.
      \ 

      \    Use this model when no stock ticker symbol is provided.


      \    - Stock Market Data: \ 

      \    Retrieve real-time financial news, stock prices, and trade updates
      using model `am_01j749h8pbf7ns8r1bq9s2evrh`. \ 

      \    Use this model only when a stock ticker symbol is provided.


      \    Based on the provided `ai_model_id`, the tool selects the appropriate
      model and returns search results.

      \    "
    inputSchema:
      type: object
      title: dappier_real_time_searchArguments
      required:
        - query
        - ai_model_id
      properties:
        query:
          type: string
          title: Query
          description: The search query to retrieve real-time information.
        ai_model_id:
          enum:
            - am_01j06ytn18ejftedz6dyhz2b15
            - am_01j749h8pbf7ns8r1bq9s2evrh
          type: string
          title: Ai Model Id
          description: >+
            The AI model ID to use for the query.


            Available AI Models:

            - am_01j06ytn18ejftedz6dyhz2b15: (Real-Time Data) Access real-time
            Google web search results, including the latest news, stock market
            data, news, weather, travel, deals, and more. Use this model when no
            stock ticker symbol is provided.

            - am_01j749h8pbf7ns8r1bq9s2evrh: (Stock Market Data) Access
            real-time financial news, stock prices, and trades from Polygon.io,
            with AI-powered insights and up-to-the-minute updates. Use this
            model only when a stock ticker symbol is provided.

  - name: dappier_ai_recommendations
    description: "

      \    Fetch AI-powered recommendations from Dappier by processing the
      provided query with a selected data model that tailors results to specific
      interests.


      \    - **Sports News (dm_01j0pb465keqmatq9k83dthx34):** \ 

      \    Get real-time news, updates, and personalized content from top sports
      sources.


      \    - **Lifestyle News (dm_01j0q82s4bfjmsqkhs3ywm3x6y):** \ 

      \    Access current lifestyle updates, analysis, and insights from leading
      lifestyle publications.


      \    - **iHeartDogs AI (dm_01j1sz8t3qe6v9g8ad102kvmqn):** \ 

      \    Tap into a dog care expert with access to thousands of articles
      covering pet health, behavior, grooming, and ownership.


      \    - **iHeartCats AI (dm_01j1sza0h7ekhaecys2p3y0vmj):** \ 

      \    Utilize a cat care specialist that provides comprehensive content on
      cat health, behavior, and lifestyle.


      \    - **GreenMonster (dm_01j5xy9w5sf49bm6b1prm80m27):** \ 

      \    Receive guidance for making conscious and compassionate choices
      benefiting people, animals, and the planet.


      \    - **WISH-TV AI (dm_01jagy9nqaeer9hxx8z1sk1jx6):** \ 

      \    Get recommendations covering sports, breaking news, politics,
      multicultural updates, and more.


      \    Based on the chosen `data_model_id`, the tool processes the input
      query and returns a formatted summary including article titles, summaries,
      images, source URLs, publication dates, and relevance scores.

      \    "
    inputSchema:
      type: object
      title: dappier_ai_recommendationsArguments
      required:
        - query
        - data_model_id
      properties:
        ref:
          anyOf:
            - type: string
            - type: "null"
          title: Ref
          default: null
          description: The site domain where recommendations should be prioritized.
        query:
          type: string
          title: Query
          description: The input string for AI-powered content recommendations.
        data_model_id:
          enum:
            - dm_01j0pb465keqmatq9k83dthx34
            - dm_01j0q82s4bfjmsqkhs3ywm3x6y
            - dm_01j1sz8t3qe6v9g8ad102kvmqn
            - dm_01j1sza0h7ekhaecys2p3y0vmj
            - dm_01j5xy9w5sf49bm6b1prm80m27
            - dm_01jagy9nqaeer9hxx8z1sk1jx6
          type: string
          title: Data Model Id
          description: >+
            The data model ID to use for recommendations.


            Available Data Models:

            - dm_01j0pb465keqmatq9k83dthx34: (Sports News) Real-time news,
            updates, and personalized content from top sports sources like
            Sportsnaut, Forever Blueshirts, Minnesota Sports Fan, LAFB Network,
            Bounding Into Sports and Ringside Intel.

            - dm_01j0q82s4bfjmsqkhs3ywm3x6y: (Lifestyle News) Real-time updates,
            analysis, and personalized content from top sources like The Mix,
            Snipdaily, Nerdable and Familyproof.

            - dm_01j1sz8t3qe6v9g8ad102kvmqn: (iHeartDogs AI) A dog care expert
            with access to thousands of articles on health, behavior, lifestyle,
            grooming, ownership, and more from the industry-leading pet
            community iHeartDogs.com.

            - dm_01j1sza0h7ekhaecys2p3y0vmj: (iHeartCats AI) A cat care expert
            with access to thousands of articles on health, behavior, lifestyle,
            grooming, ownership, and more from the industry-leading pet
            community iHeartCats.com.

            - dm_01j5xy9w5sf49bm6b1prm80m27: (GreenMonster) A helpful guide to
            making conscious and compassionate choices that benefit people,
            animals, and the planet.

            - dm_01jagy9nqaeer9hxx8z1sk1jx6: (WISH-TV AI) Covers sports,
            politics, breaking news, multicultural news, Hispanic language
            content, entertainment, health, and education.

        num_articles_ref:
          type: integer
          title: Num Articles Ref
          default: 0
          description: Minimum number of articles to return from the reference domain.
        search_algorithm:
          enum:
            - most_recent
            - semantic
            - most_recent_semantic
            - trending
          type: string
          title: Search Algorithm
          default: most_recent
          description: The search algorithm to use for retrieving articles.
        similarity_top_k:
          type: integer
          title: Similarity Top K
          default: 9
          description: Number of top similar articles to retrieve based on semantic
            similarity.
