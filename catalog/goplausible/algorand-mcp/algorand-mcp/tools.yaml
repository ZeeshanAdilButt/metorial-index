tools:
  - name: create_account
    description: Create a new Algorand account
    inputSchema:
      type: object
      required: []
      properties: {}
  - name: rekey_account
    description: Rekey an Algorand account to a new address
    inputSchema:
      type: object
      required:
        - sourceAddress
        - targetAddress
      properties:
        sourceAddress:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        targetAddress:
          type: string
          description: Address to rekey the sender account to
  - name: mnemonic_to_mdk
    description: Convert a mnemonic to a master derivation key
    inputSchema:
      type: object
      required:
        - mnemonic
      properties:
        mnemonic:
          type: string
          description: The mnemonic phrase to convert to a master derivation key
  - name: mdk_to_mnemonic
    description: Convert a master derivation key to a mnemonic
    inputSchema:
      type: object
      required:
        - mdk
      properties:
        mdk:
          type: string
          description: The master derivation key in hexadecimal format
  - name: secret_key_to_mnemonic
    description: Convert a secret key to a mnemonic
    inputSchema:
      type: object
      required:
        - secretKey
      properties:
        secretKey:
          type: string
          description: The secret key in hexadecimal format
  - name: mnemonic_to_secret_key
    description: Convert a mnemonic to a secret key
    inputSchema:
      type: object
      required:
        - mnemonic
      properties:
        mnemonic:
          type: string
          description: The mnemonic phrase to convert to a secret key
  - name: seed_from_mnemonic
    description: Generate a seed from a mnemonic
    inputSchema:
      type: object
      required:
        - mnemonic
      properties:
        mnemonic:
          type: string
          description: The mnemonic phrase to generate a seed from
  - name: mnemonic_from_seed
    description: Generate a mnemonic from a seed
    inputSchema:
      type: object
      required:
        - seed
      properties:
        seed:
          type: string
          description: The seed in hexadecimal format to generate a mnemonic from
  - name: validate_address
    description: Check if an Algorand address is valid
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Address in standard Algorand format (58 characters)
  - name: encode_address
    description: Encode a public key to an Algorand address
    inputSchema:
      type: object
      required:
        - publicKey
      properties:
        publicKey:
          type: string
          description: Public key in hexadecimal format to encode into an address
  - name: decode_address
    description: Decode an Algorand address to a public key
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Address in standard Algorand format (58 characters) to decode
  - name: get_application_address
    description: Get the address for a given application ID
    inputSchema:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: Application ID to get the address for
  - name: bytes_to_bigint
    description: Convert bytes to a BigInt
    inputSchema:
      type: object
      required:
        - bytes
      properties:
        bytes:
          type: string
          description: Bytes in hexadecimal format to convert to a BigInt
  - name: bigint_to_bytes
    description: Convert a BigInt to bytes
    inputSchema:
      type: object
      required:
        - value
        - size
      properties:
        size:
          type: integer
          description: Size of the resulting byte array
        value:
          type: string
          description: BigInt value as a string to convert to bytes
  - name: encode_uint64
    description: Encode a uint64 to bytes
    inputSchema:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          description: Uint64 value as a string to encode into bytes
  - name: decode_uint64
    description: Decode bytes to a uint64
    inputSchema:
      type: object
      required:
        - bytes
      properties:
        bytes:
          type: string
          description: Bytes in hexadecimal format to decode into a uint64
  - name: compile_teal
    description: Compile TEAL source code
    inputSchema:
      type: object
      required:
        - source
      properties:
        source:
          type: string
          description: Logic that executes when the app is called (compiled TEAL as base64)
  - name: disassemble_teal
    description: Disassemble TEAL bytecode back to source
    inputSchema:
      type: object
      required:
        - bytecode
      properties:
        bytecode:
          type: string
          description: TEAL bytecode to disassemble into source code
  - name: send_raw_transaction
    description: Submit signed transactions to the Algorand network
    inputSchema:
      type: object
      required:
        - signedTxns
      properties:
        signedTxns:
          type: array
          items:
            type: string
            description: Base64-encoded signed transaction
          description: Array of signed transactions to submit to the network
  - name: simulate_raw_transactions
    description: Simulate raw transactions
    inputSchema:
      type: object
      required:
        - txns
      properties:
        txns:
          type: array
          items:
            type: string
            description: Base64-encoded transaction
          description: Array of transactions to simulate
  - name: simulate_transactions
    description: Simulate transactions with detailed configuration
    inputSchema:
      type: object
      required:
        - txnGroups
      properties:
        round:
          type: integer
          optional: true
          description: Round at which to simulate the transactions
        txnGroups:
          type: array
          items:
            type: object
            required:
              - txns
            properties:
              txns:
                type: array
                items:
                  type: object
                  description: Transaction object to simulate
                description: Array of transactions in this group
            description: Group of transactions to simulate together
          description: Array of transaction groups to simulate
        execTraceConfig:
          type: object
          optional: true
          description: Configuration for execution trace output
        allowMoreLogging:
          type: boolean
          optional: true
          description: Enable additional logging during simulation
        extraOpcodeBudget:
          type: integer
          optional: true
          description: Additional budget for TEAL program execution
        allowEmptySignatures:
          type: boolean
          optional: true
          description: Allow transactions without signatures
        allowUnnamedResources:
          type: boolean
          optional: true
          description: Allow access to resources not listed in transaction
  - name: make_payment_txn
    description: Create a payment transaction
    inputSchema:
      type: object
      required:
        - from
        - to
        - amount
      properties:
        to:
          type: string
          description: Receiver address in standard Algorand format (58 characters)
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Optional transaction note
        amount:
          type: integer
          description: Amount in microAlgos
        rekeyTo:
          type: string
          optional: true
          description: Optional rekey to address in standard Algorand format
        closeRemainderTo:
          type: string
          optional: true
          description: Optional close remainder to address in standard Algorand format
      description: Create a payment transaction with proper Algorand address strings
  - name: make_keyreg_txn
    description: Create a key registration transaction
    inputSchema:
      type: object
      required:
        - from
        - voteKey
        - selectionKey
        - stateProofKey
        - voteFirst
        - voteLast
        - voteKeyDilution
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        voteKey:
          type: string
          description: The root participation public key (58 bytes base64 encoded)
        voteLast:
          type: integer
          description: Last round this participation key is valid
        voteFirst:
          type: integer
          description: First round this participation key is valid
        selectionKey:
          type: string
          description: VRF public key (32 bytes base64 encoded)
        stateProofKey:
          type: string
          description: State proof public key (64 bytes base64 encoded)
        voteKeyDilution:
          type: integer
          description: Dilution for the 2-level participation key
        nonParticipation:
          type: boolean
          optional: true
          description: Mark account as nonparticipating for rewards
  - name: make_asset_create_txn
    description: Create an asset creation transaction
    inputSchema:
      type: object
      required:
        - from
        - total
        - decimals
        - defaultFrozen
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        total:
          type: integer
          description: Total number of base units of the asset to create
        freeze:
          type: string
          optional: true
          description: Address that can freeze/unfreeze holder accounts
        manager:
          type: string
          optional: true
          description: Address that can manage the asset configuration
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        reserve:
          type: string
          optional: true
          description: Address holding reserve funds for the asset
        assetURL:
          type: string
          optional: true
          description: URL where more information about the asset can be found
        clawback:
          type: string
          optional: true
          description: Address that can revoke the asset from holders
        decimals:
          type: integer
          description: Number of decimals for display purposes (0-19)
        unitName:
          type: string
          optional: true
          description: Short name for the asset (1-8 characters)
        assetName:
          type: string
          optional: true
          description: Full name of the asset (1-32 characters)
        defaultFrozen:
          type: boolean
          description: Whether accounts should be frozen by default
        assetMetadataHash:
          type: string
          optional: true
          description: Hash commitment of some sort of asset metadata (32-byte string)
  - name: make_asset_config_txn
    description: Create an asset configuration transaction
    inputSchema:
      type: object
      required:
        - from
        - assetIndex
        - strictEmptyAddressChecking
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        freeze:
          type: string
          optional: true
          description: New address that can freeze/unfreeze holder accounts
        manager:
          type: string
          optional: true
          description: New address that can manage the asset configuration
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        reserve:
          type: string
          optional: true
          description: New address holding reserve funds for the asset
        clawback:
          type: string
          optional: true
          description: New address that can revoke the asset from holders
        assetIndex:
          type: integer
          description: Index of the asset to reconfigure
        strictEmptyAddressChecking:
          type: boolean
          description: Whether to error if any provided address is empty
  - name: make_asset_destroy_txn
    description: Create an asset destroy transaction
    inputSchema:
      type: object
      required:
        - from
        - assetIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        assetIndex:
          type: integer
          description: Index of the asset to destroy
  - name: make_asset_freeze_txn
    description: Create an asset freeze transaction
    inputSchema:
      type: object
      required:
        - from
        - assetIndex
        - freezeTarget
        - freezeState
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        assetIndex:
          type: integer
          description: Index of the asset being frozen
        freezeState:
          type: boolean
          description: True to freeze the asset, false to unfreeze
        freezeTarget:
          type: string
          description: Address of the account whose asset is being frozen/unfrozen
  - name: make_asset_transfer_txn
    description: Create an asset transfer transaction
    inputSchema:
      type: object
      required:
        - from
        - to
        - assetIndex
        - amount
      properties:
        to:
          type: string
          description: Recipient address in standard Algorand format (58 characters)
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        amount:
          type: integer
          description: Amount of asset base units to transfer
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        assetIndex:
          type: integer
          description: Index of the asset being transferred
        closeRemainderTo:
          type: string
          optional: true
          description: Address to send remaining asset balance to (close asset holding)
  - name: make_app_create_txn
    description: Create an application creation transaction
    inputSchema:
      type: object
      required:
        - from
        - approvalProgram
        - clearProgram
        - numGlobalByteSlices
        - numGlobalInts
        - numLocalByteSlices
        - numLocalInts
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        extraPages:
          type: integer
          optional: true
          description: Additional program pages for larger programs (0-3)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        clearProgram:
          type: string
          description: Logic that executes when clear state is called (compiled TEAL as
            base64)
        numLocalInts:
          type: integer
          description: Number of integer values in local state per account (0-16)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
        numGlobalInts:
          type: integer
          description: Number of integer values in global state (0-64)
        approvalProgram:
          type: string
          description: Logic that executes when the app is called (compiled TEAL as base64)
        numLocalByteSlices:
          type: integer
          description: Number of byte array values in local state per account (0-16)
        numGlobalByteSlices:
          type: integer
          description: Number of byte array values in global state (0-64)
  - name: make_app_update_txn
    description: Create an application update transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
        - approvalProgram
        - clearProgram
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to update
        onComplete:
          type: integer
          optional: true
          description: Application call completion behavior (0=NoOp, 1=OptIn, 2=CloseOut,
            3=ClearState, 4=UpdateApplication, 5=DeleteApplication)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        clearProgram:
          type: string
          description: New clear state program (compiled TEAL as base64)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
        approvalProgram:
          type: string
          description: New approval program (compiled TEAL as base64)
  - name: make_app_delete_txn
    description: Create an application delete transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to delete
        onComplete:
          type: integer
          optional: true
          description: Application call completion behavior (0=NoOp, 1=OptIn, 2=CloseOut,
            3=ClearState, 4=UpdateApplication, 5=DeleteApplication)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
  - name: make_app_optin_txn
    description: Create an application opt-in transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to opt into
        onComplete:
          type: integer
          optional: true
          description: Application call completion behavior (0=NoOp, 1=OptIn, 2=CloseOut,
            3=ClearState, 4=UpdateApplication, 5=DeleteApplication)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
  - name: make_app_closeout_txn
    description: Create an application close out transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to close out from
        onComplete:
          type: integer
          optional: true
          description: Application call completion behavior (0=NoOp, 1=OptIn, 2=CloseOut,
            3=ClearState, 4=UpdateApplication, 5=DeleteApplication)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
  - name: make_app_clear_txn
    description: Create an application clear state transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        lease:
          type: string
          optional: true
          description: Lease enforces mutual exclusion of transactions (32 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        rekeyTo:
          type: string
          optional: true
          description: Address to rekey the sender account to
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to clear state from
        onComplete:
          type: integer
          optional: true
          description: Application call completion behavior (0=NoOp, 1=OptIn, 2=CloseOut,
            3=ClearState, 4=UpdateApplication, 5=DeleteApplication)
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
  - name: make_app_call_txn
    description: Create an application call transaction
    inputSchema:
      type: object
      required:
        - from
        - appIndex
      properties:
        from:
          type: string
          description: Sender address in standard Algorand format (58 characters)
        note:
          type: string
          optional: true
          description: Transaction note field (up to 1000 bytes)
        appArgs:
          type: array
          items:
            type: string
          optional: true
          description: Arguments to pass to the application (max 16 arguments)
        accounts:
          type: array
          items:
            type: string
          optional: true
          description: Accounts whose local state may be accessed (max 4 accounts)
        appIndex:
          type: integer
          description: ID of the application to call
        foreignApps:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of apps whose global state may be accessed (max 8 apps)
        foreignAssets:
          type: array
          items:
            type: integer
          optional: true
          description: IDs of assets that may be accessed (max 8 assets)
  - name: assign_group_id
    description: Assign a group ID to a list of transactions
    inputSchema:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            type: object
          description: Array of transaction objects to be assigned a group ID
  - name: sign_transaction
    description: Sign a transaction with a secret key
    inputSchema:
      type: object
      required:
        - transaction
        - sk
      properties:
        sk:
          type: string
          description: Secret key in hexadecimal format to sign the transaction with
        transaction:
          type: object
          description: Transaction object to be signed
  - name: sign_bytes
    description: Sign arbitrary bytes with a secret key
    inputSchema:
      type: object
      required:
        - bytes
        - sk
      properties:
        sk:
          type: string
          description: Secret key in hexadecimal format to sign the bytes with
        bytes:
          type: string
          description: Base64-encoded bytes to be signed
  - name: encode_obj
    description: Encode an object to msgpack format
    inputSchema:
      type: object
      required:
        - obj
      properties:
        obj:
          type: object
          description: Object to be encoded into msgpack format
  - name: decode_obj
    description: Decode msgpack bytes to an object
    inputSchema:
      type: object
      required:
        - bytes
      properties:
        bytes:
          type: string
          description: Base64-encoded msgpack bytes to be decoded into an object
  - name: resource_algod_get_account_info
    description: Get current account balance, assets, and auth address from algod
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: The account public key
  - name: resource_algod_get_account_application_info
    description: Get account-specific application information from algod
    inputSchema:
      type: object
      required:
        - address
        - appId
      properties:
        appId:
          type: integer
          description: The application ID
        address:
          type: string
          description: The account public key
  - name: resource_algod_get_account_asset_info
    description: Get account-specific asset information from algod
    inputSchema:
      type: object
      required:
        - address
        - assetId
      properties:
        address:
          type: string
          description: The account public key
        assetId:
          type: integer
          description: The asset ID
  - name: resource_algod_get_application_by_id
    description: Get application information
    inputSchema:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: Application ID
  - name: resource_algod_get_application_box
    description: Get application box by name
    inputSchema:
      type: object
      required:
        - appId
        - boxName
      properties:
        appId:
          type: integer
          description: Application ID
        boxName:
          type: string
          description: "Box name. "
  - name: resource_algod_get_application_boxes
    description: Get all application boxes
    inputSchema:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: Application ID
        maxBoxes:
          type: integer
          description: Maximum number of boxes to return
  - name: resource_algod_get_asset_by_id
    description: Get current asset information from algod
    inputSchema:
      type: object
      required:
        - assetId
      properties:
        assetId:
          type: integer
          description: Asset ID
  - name: resource_algod_get_pending_transaction
    description: Get pending transaction information
    inputSchema:
      type: object
      required:
        - txId
      properties:
        txId:
          type: string
          description: Transaction ID
  - name: resource_algod_get_pending_transactions_by_address
    description: Get pending transactions for an address
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Account address
  - name: resource_algod_get_pending_transactions
    description: Get all pending transactions
    inputSchema:
      type: object
      properties:
        maxTxns:
          type: integer
          description: Maximum number of transactions to return
  - name: resource_algod_get_transaction_params
    description: Get suggested transaction parameters
    inputSchema:
      type: object
      properties: {}
  - name: resource_algod_get_node_status
    description: Get current node status
    inputSchema:
      type: object
      properties: {}
  - name: resource_algod_get_node_status_after_block
    description: Get node status after a specific round
    inputSchema:
      type: object
      required:
        - round
      properties:
        round:
          type: integer
          description: Round number
  - name: resource_indexer_lookup_account_by_id
    description: Get account information from indexer
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Account address
  - name: resource_indexer_lookup_account_assets
    description: Get account assets
    inputSchema:
      type: object
      required:
        - address
      properties:
        limit:
          type: integer
          description: Maximum number of assets to return
        address:
          type: string
          description: Account address
        assetId:
          type: integer
          description: Filter by asset ID
        nextToken:
          type: string
          description: Token for retrieving the next page of results
  - name: resource_indexer_lookup_account_app_local_states
    description: Get account application local states
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Account address
  - name: resource_indexer_lookup_account_created_applications
    description: Get applications created by this account
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Account address
  - name: resource_indexer_search_for_accounts
    description: Search for accounts with various criteria
    inputSchema:
      type: object
      properties:
        limit:
          type: integer
          description: Maximum number of accounts to return
        assetId:
          type: integer
          description: Filter by asset ID
        nextToken:
          type: string
          description: Token for retrieving the next page of results
        applicationId:
          type: integer
          description: Filter by application ID
        currencyLessThan:
          type: integer
          description: Filter by maximum balance
        currencyGreaterThan:
          type: integer
          description: Filter by minimum balance
  - name: resource_indexer_lookup_applications
    description: Get application information from indexer
    inputSchema:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: Application ID
  - name: resource_indexer_lookup_application_logs
    description: Get application log messages
    inputSchema:
      type: object
      required:
        - appId
      properties:
        txid:
          type: string
          description: Filter by transaction ID
        appId:
          type: integer
          description: Application ID
        limit:
          type: integer
          description: Maximum number of logs to return
        sender:
          type: string
          description: Filter by sender address
        maxRound:
          type: integer
          description: Only return logs before this round
        minRound:
          type: integer
          description: Only return logs after this round
        nextToken:
          type: string
          description: Token for retrieving the next page of results
  - name: resource_indexer_search_for_applications
    description: Search for applications with various criteria
    inputSchema:
      type: object
      properties:
        limit:
          type: integer
          description: Maximum number of applications to return
        creator:
          type: string
          description: Filter by creator address
        nextToken:
          type: string
          description: Token for retrieving the next page of results
  - name: resource_indexer_lookup_application_box
    description: Get application box by name
    inputSchema:
      type: object
      required:
        - appId
        - boxName
      properties:
        appId:
          type: integer
          description: Application ID
        boxName:
          type: string
          description: Box name Buffer
  - name: resource_indexer_lookup_application_boxes
    description: Get all application boxes
    inputSchema:
      type: object
      required:
        - appId
      properties:
        appId:
          type: integer
          description: Application ID
        maxBoxes:
          type: integer
          description: Maximum number of boxes to return
  - name: resource_indexer_lookup_asset_by_id
    description: Get asset information and configuration
    inputSchema:
      type: object
      required:
        - assetId
      properties:
        assetId:
          type: integer
          description: Asset ID
  - name: resource_indexer_lookup_asset_balances
    description: Get accounts holding this asset and their balances
    inputSchema:
      type: object
      required:
        - assetId
      properties:
        limit:
          type: integer
          description: Maximum number of balances to return
        address:
          type: string
          description: Filter by account address
        assetId:
          type: integer
          description: Asset ID
        nextToken:
          type: string
          description: Token for retrieving the next page of results
        currencyLessThan:
          type: integer
          description: Filter by maximum balance
        currencyGreaterThan:
          type: integer
          description: Filter by minimum balance
  - name: resource_indexer_lookup_asset_transactions
    description: Get transactions involving this asset
    inputSchema:
      type: object
      required:
        - assetId
      properties:
        txid:
          type: string
          description: Filter by transaction ID
        limit:
          type: integer
          description: Maximum number of transactions to return
        address:
          type: string
          description: Filter by account address
        assetId:
          type: integer
          description: Asset ID
        maxRound:
          type: integer
          description: Only return transactions before this round
        minRound:
          type: integer
          description: Only return transactions after this round
        afterTime:
          type: string
          description: Only return transactions after this time
        nextToken:
          type: string
          description: Token for retrieving the next page of results
        beforeTime:
          type: string
          description: Only return transactions before this time
        addressRole:
          type: string
          description: Filter by address role (sender or receiver)
        excludeCloseTo:
          type: boolean
          description: Whether to exclude close-to transactions
  - name: resource_indexer_search_for_assets
    description: Search for assets with various criteria
    inputSchema:
      type: object
      properties:
        name:
          type: string
          description: Filter by asset name
        unit:
          type: string
          description: Filter by asset unit name
        limit:
          type: integer
          description: Maximum number of assets to return
        assetId:
          type: integer
          description: Filter by asset ID
        creator:
          type: string
          description: Filter by creator address
        nextToken:
          type: string
          description: Token for retrieving the next page of results
  - name: resource_indexer_lookup_transaction_by_id
    description: Get transaction information by ID
    inputSchema:
      type: object
      required:
        - txId
      properties:
        txId:
          type: string
          description: Transaction ID
  - name: resource_indexer_lookup_account_transactions
    description: Get account transaction history
    inputSchema:
      type: object
      required:
        - address
      properties:
        limit:
          type: integer
          description: Maximum number of transactions to return
        txType:
          type: string
          description: Filter by transaction type
        address:
          type: string
          description: Account address
        assetId:
          type: integer
          description: Filter by asset ID
        maxRound:
          type: integer
          description: Only return transactions before this round
        minRound:
          type: integer
          description: Only return transactions after this round
        afterTime:
          type: string
          description: Only return transactions after this time
        beforeTime:
          type: string
          description: Only return transactions before this time
  - name: resource_indexer_search_for_transactions
    description: Search for transactions with various criteria
    inputSchema:
      type: object
      properties:
        limit:
          type: integer
          description: Maximum number of transactions to return
        round:
          type: integer
          description: Filter by specific round
        txType:
          type: string
          description: Filter by transaction type
        address:
          type: string
          description: Filter by account address
        assetId:
          type: integer
          description: Filter by asset ID
        maxRound:
          type: integer
          description: Only return transactions before this round
        minRound:
          type: integer
          description: Only return transactions after this round
        afterTime:
          type: string
          description: Only return transactions after this time
        nextToken:
          type: string
          description: Token for retrieving the next page of results
        beforeTime:
          type: string
          description: Only return transactions before this time
        addressRole:
          type: string
          description: Filter by address role (sender or receiver)
        applicationId:
          type: integer
          description: Filter by application ID
        currencyLessThan:
          type: integer
          description: Filter by maximum amount
        currencyGreaterThan:
          type: integer
          description: Filter by minimum amount
  - name: resource_nfd_get_nfd
    description: Get a specific NFD by name or by its application ID
    inputSchema:
      type: object
      required:
        - nameOrID
      properties:
        poll:
          type: boolean
          description: Use if polling waiting for state change
        view:
          enum:
            - tiny
            - brief
            - full
          type: string
          description: View of data to return
        nocache:
          type: boolean
          description: Set to true to return a never-cached result
        nameOrID:
          type: string
          description: Name of NFD or application ID
  - name: resource_nfd_get_nfds_for_addresses
    description: Get NFDs for specific addresses
    inputSchema:
      type: object
      required:
        - address
      properties:
        view:
          enum:
            - tiny
            - thumbnail
            - brief
            - full
          type: string
          description: View of data to return
        limit:
          type: integer
          description: Limit the number of results
        address:
          type: array
          items:
            type: string
          description: Array of addresses to look up
  - name: resource_nfd_get_nfd_activity
    description: Get activity/changes for NFDs
    inputSchema:
      type: object
      required:
        - name
      properties:
        name:
          type: array
          items:
            type: string
          description: Array of NFD names to get activity for
        sort:
          enum:
            - timeDesc
            - timeAsc
          type: string
          description: Sort order
        type:
          enum:
            - changes
          type: string
          description: Type of activity to retrieve
        limit:
          type: integer
          description: Limit the number of results
        afterTime:
          type: string
          format: date-time
          description: Get activity after this time
  - name: resource_nfd_get_nfd_analytics
    description: Get analytics data for NFDs
    inputSchema:
      type: object
      properties:
        name:
          type: string
          description: NFD name to filter on
        sort:
          enum:
            - timeDesc
            - priceAsc
            - priceDesc
          type: string
          description: Sort order
        buyer:
          type: string
          description: Buyer address to filter on
        event:
          type: array
          items:
            type: string
          description: Events to filter on
        limit:
          type: integer
          description: Limit the number of results
        offset:
          type: integer
          description: Offset for pagination
        seller:
          type: string
          description: Seller address to filter on
        category:
          type: array
          items:
            enum:
              - curated
              - premium
              - common
            type: string
        maxPrice:
          type: integer
          description: Maximum price
        minPrice:
          type: integer
          description: Minimum price
        includeOwner:
          type: boolean
          description: Whether to include current owner
        requireBuyer:
          type: boolean
          description: Whether buyer must be present
        excludeNFDAsSeller:
          type: boolean
          description: Whether to exclude NFDomains as seller
  - name: resource_nfd_browse_nfds
    description: Browse NFDs with various filters
    inputSchema:
      type: object
      properties:
        name:
          type: string
          description: Name to filter on
        sort:
          enum:
            - createdDesc
            - timeChangedDesc
            - soldDesc
            - priceAsc
            - priceDesc
            - highestSaleDesc
            - saleTypeAsc
          type: string
          description: Sort order
        view:
          enum:
            - tiny
            - brief
            - full
          type: string
          description: View of data to return
        limit:
          type: integer
          description: Limit the number of results
        owner:
          type: string
          description: Owner address to filter on
        state:
          type: array
          items:
            enum:
              - reserved
              - forSale
              - owned
              - expired
            type: string
        offset:
          type: integer
          description: Offset for pagination
        category:
          type: array
          items:
            enum:
              - curated
              - premium
              - common
            type: string
        maxPrice:
          type: integer
          description: Maximum price
        minPrice:
          type: integer
          description: Minimum price
        saleType:
          type: array
          items:
            enum:
              - auction
              - buyItNow
            type: string
  - name: resource_nfd_search_nfds
    description: Search NFDs with various filters
    inputSchema:
      type: object
      properties:
        name:
          type: string
          description: Name to search for
        sort:
          enum:
            - createdDesc
            - timeChangedDesc
            - soldDesc
            - priceAsc
            - priceDesc
            - highestSaleDesc
            - saleTypeAsc
          type: string
          description: Sort order
        view:
          enum:
            - tiny
            - brief
            - full
          type: string
          description: View of data to return
        limit:
          type: integer
          description: Limit the number of results
        owner:
          type: string
          description: Owner address to filter on
        state:
          type: array
          items:
            enum:
              - reserved
              - forSale
              - owned
              - expired
            type: string
        offset:
          type: integer
          description: Offset for pagination
        category:
          type: array
          items:
            enum:
              - curated
              - premium
              - common
            type: string
        maxPrice:
          type: integer
          description: Maximum price
        minPrice:
          type: integer
          description: Minimum price
        saleType:
          type: array
          items:
            enum:
              - auction
              - buyItNow
            type: string
  - name: resource_vestige_view_networks
    description: Get all networks
    inputSchema:
      type: object
      properties: {}
  - name: resource_vestige_view_network_by_id
    description: Get network by id
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_protocols
    description: Get all protocols
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_protocol_by_id
    description: Get protocol by id
    inputSchema:
      type: object
      required:
        - protocol_id
        - network_id
      properties:
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Protocol ID
  - name: resource_vestige_view_protocol_volumes
    description: Get protocol volumes at specific day. Defaults to current day.
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        timestamp:
          type: integer
          description: Optional timestamp
        network_id:
          type: integer
          description: Network ID
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_vestige_view_assets
    description: Get data about assets
    inputSchema:
      type: object
      required:
        - network_id
        - asset_ids
      properties:
        asset_ids:
          type: string
          description: Comma-separated list of asset IDs
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_assets_list
    description: Get asset list
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        tvl__gt:
          type: number
          description: Filter by TVL greater than
        tvl__lt:
          type: number
          description: Filter by TVL less than
        order_by:
          type: string
          description: Field to order by
        asset_ids:
          type: string
          description: Optional comma-separated list of asset IDs
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
        volume1d__gt:
          type: number
          description: Filter by 24h volume greater than
        volume1d__lt:
          type: number
          description: Filter by 24h volume less than
        created_at__gt:
          type: integer
          description: Filter by creation time greater than
        created_at__lt:
          type: integer
          description: Filter by creation time less than
        exclude_labels:
          type: string
          description: Optional comma-separated list of labels to exclude
        include_labels:
          type: string
          description: Optional comma-separated list of labels to include
        market_cap__gt:
          type: number
          description: Filter by market cap greater than
        market_cap__lt:
          type: number
          description: Filter by market cap less than
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
        fully_diluted_market_cap__gt:
          type: number
          description: Filter by fully diluted market cap greater than
        fully_diluted_market_cap__lt:
          type: number
          description: Filter by fully diluted market cap less than
  - name: resource_vestige_view_assets_search
    description: Search assets by query
    inputSchema:
      type: object
      required:
        - network_id
        - query
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        query:
          type: string
          description: Search query
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        order_by:
          type: string
          description: Field to order by
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Optional protocol ID filter
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_vestige_view_asset_price
    description: Get asset prices
    inputSchema:
      type: object
      required:
        - network_id
        - asset_ids
      properties:
        asset_ids:
          type: string
          description: Comma-separated list of asset IDs
        network_id:
          type: integer
          description: Network ID
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_vestige_view_asset_candles
    description: Get asset candles
    inputSchema:
      type: object
      required:
        - network_id
        - asset_id
        - interval
        - start
      properties:
        end:
          type: integer
          description: Optional end timestamp
        start:
          type: integer
          description: Start timestamp
        asset_id:
          type: integer
          description: Asset ID
        interval:
          type: integer
          description: Candle interval in seconds
        network_id:
          type: integer
          description: Network ID
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
        volume_in_denominating_asset:
          type: boolean
          default: false
          description: Whether to return volume in denominating asset
  - name: resource_vestige_view_asset_history
    description: Get asset volume, swaps, total lockup, vwap and confidence history
    inputSchema:
      type: object
      required:
        - network_id
        - asset_id
        - interval
        - start
      properties:
        end:
          type: integer
          description: Optional end timestamp
        start:
          type: integer
          description: Start timestamp
        asset_id:
          type: integer
          description: Asset ID
        interval:
          type: integer
          description: History interval in seconds
        network_id:
          type: integer
          description: Network ID
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
        volume_in_denominating_asset:
          type: boolean
          default: false
          description: Whether to return volume in denominating asset
  - name: resource_vestige_view_asset_composition
    description: Get asset lockups based on protocol and pair
    inputSchema:
      type: object
      required:
        - network_id
        - asset_id
      properties:
        asset_id:
          type: integer
          description: Asset ID
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_pools
    description: Get pools
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        order_by:
          type: string
          description: Field to order by
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        asset_1_id:
          type: integer
          description: Optional asset 1 ID filter
        asset_2_id:
          type: integer
          description: Optional asset 2 ID filter
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Optional protocol ID filter
        other_protocol_id:
          type: integer
          description: Optional other protocol ID filter
  - name: resource_vestige_view_vaults
    description: Get all vaults
    inputSchema:
      type: object
      required:
        - network_id
        - protocol_id
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        address:
          type: string
          description: Optional address filter
        asset_id:
          type: integer
          description: Optional asset ID filter
        order_by:
          type: string
          description: Field to order by
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Protocol ID
  - name: resource_vestige_view_balances
    description: Get balances by network id, protocol id and asset id
    inputSchema:
      type: object
      required:
        - network_id
        - protocol_id
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        address:
          type: string
          description: Optional address filter
        asset_id:
          type: integer
          description: Optional asset ID filter
        order_by:
          type: string
          description: Field to order by
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Protocol ID
  - name: resource_vestige_view_notes
    description: Get notes by network id and optionally asset id
    inputSchema:
      type: object
      required:
        - network_id
      properties:
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        offset:
          type: integer
          default: 0
          minimum: 0
          description: Number of results to skip
        asset_id:
          type: integer
          description: Optional asset ID filter
        order_by:
          type: string
          description: Field to order by
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_first_asset_notes
    description: Get first note for assets
    inputSchema:
      type: object
      required:
        - network_id
        - asset_ids
      properties:
        asset_ids:
          type: string
          description: Comma-separated list of asset IDs
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_asset_notes_count
    description: Get notes count for assets
    inputSchema:
      type: object
      required:
        - network_id
        - asset_ids
      properties:
        asset_ids:
          type: string
          description: Comma-separated list of asset IDs
        network_id:
          type: integer
          description: Network ID
  - name: resource_vestige_view_swaps
    description: Get swaps
    inputSchema:
      type: object
      required:
        - network_id
        - start
      properties:
        end:
          type: integer
          description: Optional end timestamp
        next:
          type: string
          description: Optional next token for pagination
        limit:
          type: integer
          default: 50
          maximum: 250
          minimum: 1
          description: Maximum number of results
        start:
          type: integer
          description: Start timestamp
        address:
          type: string
          description: Optional address filter
        asset_id:
          type: integer
          description: Optional asset ID filter
        executor:
          type: string
          description: Optional executor filter
        order_dir:
          type: string
          default: desc
          pattern: ^(asc|desc)$
          description: Order direction (asc/desc)
        network_id:
          type: integer
          description: Network ID
        protocol_id:
          type: integer
          description: Optional protocol ID filter
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_vestige_get_best_v4_swap_data
    description: Get best V4 swap data
    inputSchema:
      type: object
      required:
        - from_asa
        - to_asa
        - amount
        - mode
      properties:
        mode:
          type: string
          pattern: ^(sef|sfe)$
          description: Swap mode (sef/sfe)
        amount:
          type: integer
          description: Amount to swap
        to_asa:
          type: integer
          description: Target ASA ID
        from_asa:
          type: integer
          description: Source ASA ID
        enabled_providers:
          type: string
          description: Optional comma-separated list of enabled providers
        disabled_providers:
          type: string
          description: Optional comma-separated list of disabled providers
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_vestige_get_v4_swap_discount
    description: Get V4 swap discount
    inputSchema:
      type: object
      required:
        - address
      properties:
        address:
          type: string
          description: Account address
  - name: resource_vestige_get_v4_swap_data_transactions
    description: Get V4 swap data transactions
    inputSchema:
      type: object
      required:
        - sender
        - slippage
        - swap_data
      properties:
        sender:
          type: string
          description: Sender address
        slippage:
          type: number
          description: Slippage tolerance
        swap_data:
          type: object
          description: V4 swap data from get_best_v4_swap_data
        random_signer:
          type: string
          description: Optional random signer address
  - name: resource_vestige_get_aggregator_stats
    description: Get aggregator stats
    inputSchema:
      type: object
      properties:
        denominating_asset_id:
          type: integer
          default: 0
          description: Optional denominating asset ID
  - name: resource_tinyman_get_pool
    description: Get Tinyman pool information by asset pair
    inputSchema:
      type: object
      required:
        - asset1Id
        - asset2Id
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        asset1Id:
          type: integer
          description: ID of the first asset in the pool
        asset2Id:
          type: integer
          description: ID of the second asset in the pool
  - name: resource_tinyman_get_liquidity_quote
    description: Get quote for adding liquidity to a pool
    inputSchema:
      type: object
      required:
        - asset1Id
        - asset2Id
        - mode
      properties:
        mode:
          enum:
            - initial
            - flexible
            - singleAsset
          type: string
          description: Mode of adding liquidity
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        asset1Id:
          type: integer
          description: ID of the first asset
        asset2Id:
          type: integer
          description: ID of the second asset
        asset1Amount:
          type: integer
          description: Amount of first asset to add
        asset2Amount:
          type: integer
          description: Amount of second asset to add
  - name: resource_tinyman_get_swap_quote
    description: Get quote for swapping assets
    inputSchema:
      type: object
      required:
        - assetIn
        - assetOut
        - amount
        - mode
      properties:
        mode:
          enum:
            - fixedInput
            - fixedOutput
          type: string
          description: Mode of swap
        amount:
          type: integer
          description: Amount to swap
        assetIn:
          type: integer
          description: ID of the input asset
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        assetOut:
          type: integer
          description: ID of the output asset
  - name: resource_tinyman_get_pool_analytics
    description: Get analytics for a Tinyman pool
    inputSchema:
      type: object
      required:
        - asset1Id
        - asset2Id
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        asset1Id:
          type: integer
          description: ID of the first asset
        asset2Id:
          type: integer
          description: ID of the second asset
  - name: resource_tinyman_get_pool_creation_quote
    description: Get quote for creating a new Tinyman pool
    inputSchema:
      type: object
      required:
        - asset1Id
        - asset2Id
        - initiatorAddr
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        asset1Id:
          type: integer
          description: ID of the first asset
        asset2Id:
          type: integer
          description: ID of the second asset
        initiatorAddr:
          type: string
          description: Address of the account creating the pool
  - name: resource_tinyman_get_remove_liquidity_quote
    description: Get quote for removing liquidity from a pool
    inputSchema:
      type: object
      required:
        - asset1Id
        - asset2Id
        - poolTokenAmount
        - initiatorAddr
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        asset1Id:
          type: integer
          description: ID of the first asset
        asset2Id:
          type: integer
          description: ID of the second asset
        slippage:
          type: number
          default: 0.01
          description: Maximum acceptable slippage (e.g., 0.01 for 1%)
        initiatorAddr:
          type: string
          description: Address of the account removing liquidity
        poolTokenAmount:
          type: integer
          description: Amount of pool tokens to burn
        singleAssetMode:
          type: boolean
          default: false
          description: Whether to remove liquidity in single asset mode (v2 only)
  - name: resource_tinyman_get_asset_optin_quote
    description: Get quote for opting into a Tinyman pool token
    inputSchema:
      type: object
      required:
        - assetId
        - initiatorAddr
      properties:
        assetId:
          type: integer
          description: ID of the pool token asset
        initiatorAddr:
          type: string
          description: Address of the account to opt in
  - name: resource_tinyman_get_validator_optin_quote
    description: Get quote for opting into Tinyman validator app
    inputSchema:
      type: object
      required:
        - initiatorAddr
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        initiatorAddr:
          type: string
          description: Address of the account to opt in
  - name: resource_tinyman_get_validator_optout_quote
    description: Get quote for opting out of Tinyman validator app
    inputSchema:
      type: object
      required:
        - initiatorAddr
      properties:
        version:
          enum:
            - v1_1
            - v2
          type: string
          default: v2
          description: Tinyman protocol version
        initiatorAddr:
          type: string
          description: Address of the account to opt out
  - name: generate_algorand_uri
    description: Generate an Algorand URI and QR code according to ARC-26 specification
    inputSchema:
      type: object
      required:
        - address
      properties:
        note:
          type: string
          optional: true
          description: URL-encoded note that can be modified by user
        asset:
          type: number
          optional: true
          description: Asset ID for ASA transfers
        label:
          type: string
          optional: true
          description: Label for the address (e.g. name of receiver)
        xnote:
          type: string
          optional: true
          description: URL-encoded note that must not be modified by user
        amount:
          type: number
          optional: true
          description: Amount in microAlgos (must be non-negative)
        address:
          type: string
          description: Algorand address in standard format (58 characters)
