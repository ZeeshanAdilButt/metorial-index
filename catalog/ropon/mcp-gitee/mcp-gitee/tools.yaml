tools:
  - name: comment_issue
    description: Create a comment on a repository issue
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
        - body
      properties:
        body:
          type: string
          description: The contents of the comment
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        number:
          type: string
          description: "Issue number (case sensitive, no # prefix needed)"
  - name: comment_pull
    description: Create a comment on a pull request
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
        - body
      properties:
        body:
          type: string
          description: The contents of the comment
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        number:
          type: number
          description: The number of the pull request, must be an integer, not a float
  - name: create_enterprise_repo
    description: Create a enterprise repository
    inputSchema:
      type: object
      required:
        - name
        - enterprise
      properties:
        name:
          type: string
          description: Repository name
        path:
          type: string
          description: Repository path
        private:
          type: boolean
          default: true
          description: Whether the repository is private
        homepage:
          type: string
          description: Repository homepage
        auto_init:
          type: boolean
          default: false
          description: Whether to initialize the repository with a README file
        enterprise:
          type: string
          description: Enterprise path
        description:
          type: string
          description: Repository description
  - name: create_issue
    description: Create an issue
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - title
      properties:
        body:
          type: string
          description: The description of the issue
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        title:
          type: string
          description: The title of the issue
        labels:
          type: string
          description: "Comma-separated labels, name requirements are between 2-20 in
            length and non-special characters. Example: bug,performance"
        program:
          type: string
          description: Project ID
        assignee:
          type: string
          description: The personal space address of the issue assignee
        milestone:
          type: string
          description: The milestone number
        issue_type:
          type: string
          description: Enterprise custom task type, non-enterprise users must consider it
            as 'task'
        collaborators:
          type: string
          description: The personal space addresses of issue collaborators, separated by
            commas
  - name: create_org_repo
    description: Create a org repository
    inputSchema:
      type: object
      required:
        - name
        - org
      properties:
        org:
          type: string
          description: Org path
        name:
          type: string
          description: Repository name
        path:
          type: string
          description: Repository path
        private:
          type: boolean
          default: true
          description: Whether the repository is private
        homepage:
          type: string
          description: Repository homepage
        auto_init:
          type: boolean
          default: false
          description: Whether to initialize the repository with a README file
        description:
          type: string
          description: Repository description
  - name: create_pull
    description: Create a pull request
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - title
        - head
        - base
      properties:
        base:
          type: string
          description: The target branch of the pull request
        body:
          type: string
          description: The body of the pull request
        head:
          type: string
          description: The source branch of the pull request
        repo:
          type: string
          description: The path of the repository
        draft:
          type: boolean
          description: Whether to set the pull request as draft
        issue:
          type: string
          description: The issue of the pull request
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        title:
          type: string
          description: The title of the pull request
        labels:
          type: string
          description: "The labels of the pull request. example: bug,performance"
        testers:
          type: string
          description: "The testers of the pull request, example: (username1,username2)"
        assignees:
          type: string
          description: "The assignees of the pull request, example: (username1,username2)"
        testers_number:
          type: number
          description: The min number of testers need accept of the pull request
        assignees_number:
          type: number
          description: The min number of assignees need accept of the pull request
        milestone_number:
          type: string
          description: The milestone number of the pull request
  - name: create_release
    description: Create a release
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - tag_name
        - name
        - body
      properties:
        body:
          type: string
          description: The description of the release
        name:
          type: string
          description: The name of the release
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        tag_name:
          type: string
          description: The name of the tag
        prerelease:
          type: boolean
          default: false
          description: Whether the release is a prerelease
        target_commitish:
          type: string
          description: The branch name or commit SHA
  - name: create_user_repo
    description: Create a user repository
    inputSchema:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Repository name
        path:
          type: string
          description: Repository path
        private:
          type: boolean
          default: true
          description: Whether the repository is private
        homepage:
          type: string
          description: Repository homepage
        auto_init:
          type: boolean
          default: false
          description: Whether to initialize the repository with a README file
        description:
          type: string
          description: Repository description
  - name: get_file_content
    description: Get the content of the specified file in the repository
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - path
      properties:
        ref:
          type: string
          description: The branch name or commit ID
        path:
          type: string
          description: The path of the file
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
  - name: get_pull_detail
    description: Get a pull request detail
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
      properties:
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        number:
          type: number
          description: The number of the pull request, must be an integer, not a float
  - name: get_repo_issue_detail
    description: Get the detail of an issue
    inputSchema:
      type: object
      required:
        - number
        - owner
        - repo
      properties:
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        number:
          type: string
          description: "Issue number (case sensitive, no # prefix needed)"
  - name: get_user_info
    description: |-
      This is a tool from the gitee MCP server.
      Get information about the authenticated user
    inputSchema:
      type: object
  - name: list_issue_comments
    description: Get all comments for a repository issue
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
      properties:
        page:
          type: number
          default: 1
          description: Current page number
        repo:
          type: string
          description: The path of the repository
        order:
          type: string
          default: asc
          description: "Sort direction: asc(default), desc"
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        since:
          type: string
          description: "Only comments updated at or after this time are returned. This is
            a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
        number:
          type: string
          description: "Issue number (case sensitive, no # prefix needed)"
        per_page:
          type: number
          default: 20
          description: Number of results per page, maximum 100
  - name: list_pull_comments
    description: List all comments for a pull request
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
      properties:
        page:
          type: number
          default: 1
          description: Current page number
        repo:
          type: string
          description: The path of the repository
        order:
          type: string
          default: asc
          description: "Sort direction: asc(default), desc"
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        since:
          type: string
          description: "Only comments updated at or after this time are returned. This is
            a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ"
        number:
          type: number
          description: The number of the pull request, must be an integer, not a float
        per_page:
          type: number
          default: 20
          description: Number of results per page, maximum 100
  - name: list_releases
    description: List repository releases
    inputSchema:
      type: object
      required:
        - owner
        - repo
      properties:
        page:
          type: number
          default: 1
          description: Current page number
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        per_page:
          type: number
          default: 20
          description: Number of results per page, maximum 100
        direction:
          enum:
            - asc
            - desc
          type: string
          description: Optional. Ascending/descending. Not filled in is ascending
  - name: list_repo_issues
    description: List all issues in a repository
    inputSchema:
      type: object
      required:
        - owner
        - repo
      properties:
        q:
          type: string
          description: Search keywords
        page:
          type: number
          default: 1
          description: Current page number
        repo:
          type: string
          description: Repository path
        sort:
          enum:
            - created
            - updated
          type: string
          description: "Sort field: creation time (created), update time (updated).
            Default: created"
        owner:
          type: string
          description: Repository owner's namespace (enterprise, organization or personal
            path)
        since:
          type: string
          description: Start update time in ISO 8601 format
        state:
          enum:
            - open
            - progressing
            - closed
            - rejected
            - all
          type: string
          description: "Issue state: open, progressing, closed, rejected"
        filter:
          enum:
            - assigned
            - created
            - all
          type: string
          description: "Filter parameter: assigned to authorized user (assigned), created
            by authorized user (created), all issues involving authorized user
            (all). Default: assigned"
        labels:
          type: string
          description: "Comma-separated labels. Example: bug,performance"
        deadline:
          type: string
          description: "Planned completion date in format: 2006-01-02T15:04:05Z"
        per_page:
          type: number
          default: 20
          description: Number of items per page, maximum 100
        schedule:
          type: string
          description: "Planned start date in format: 2006-01-02T15:04:05Z"
        direction:
          enum:
            - asc
            - desc
          type: string
          description: "Sort direction: ascending (asc) or descending (desc)"
        created_at:
          type: string
          description: "Issue creation time in format: 2006-01-02T15:04:05Z"
        finished_at:
          type: string
          description: "Issue completion time in format: 2006-01-02T15:04:05Z"
  - name: list_repo_pulls
    description: List repository pulls
    inputSchema:
      type: object
      required:
        - owner
        - repo
      properties:
        base:
          type: string
          description: Target branch name for the pull request
        head:
          type: string
          description: "Source branch of the PR. Format: branch or username:branch"
        page:
          type: number
          default: 1
          description: Current page number
        repo:
          type: string
          description: Repository namespace
        sort:
          enum:
            - created
            - updated
            - popularity
            - long-running
          type: string
          description: Sort field, default by creation time
        owner:
          type: string
          description: Repository owner's namespace
        since:
          type: string
          description: Start update time in ISO 8601 format
        state:
          enum:
            - open
            - closed
            - merged
            - all
          type: string
          description: State of the pull request
        author:
          type: string
          description: PR creator's username
        labels:
          type: string
          description: "Comma-separated labels, e.g.: bug,performance"
        tester:
          type: string
          description: Tester's username
        assignee:
          type: string
          description: Reviewer's username
        per_page:
          type: number
          default: 20
          description: Items per page (max 100)
        direction:
          enum:
            - asc
            - desc
          type: string
          description: Ascending/descending order
        milestone_number:
          type: number
          description: Milestone number (ID)
  - name: list_user_notifications
    description: List all notifications for authorized user
    inputSchema:
      type: object
      properties:
        page:
          type: number
          default: 1
          description: Page number
        type:
          enum:
            - all
            - event
            - referer
          type: string
          default: all
          description: "Filter notifications of a specified type, all: all, event: event
            notification, referer: @ notification"
        since:
          type: string
          description: Only list notifications updated after the given time, requiring the
            time format to be ISO 8601
        before:
          type: string
          description: Only list notifications updated before the given time, requiring
            the time format to be ISO 8601
        unread:
          type: boolean
          default: false
          description: Only list unread notifications
        per_page:
          type: number
          default: 20
          description: Number of results per page
        participating:
          type: boolean
          default: false
          description: Only list notifications where the user is directly participating or
            mentioned
  - name: list_user_repos
    description: List user authorized repositories
    inputSchema:
      type: object
      properties:
        q:
          type: string
          description: Search keywords
        page:
          type: number
          default: 1
          description: Page number
        sort:
          enum:
            - created
            - updated
            - pushed
            - full_name
          type: string
          default: full_name
          description: "Sorting method: creation time (created), update time (updated),
            last push time (pushed), warehouse ownership and name (full_name).
            Default: full_name"
        type:
          enum:
            - all
            - owner
            - personal
            - member
            - public
            - private
          type: string
          description: "Filter user repositories: their creation (owner), personal
            (personal), their membership (member), public (public), private
            (private), cannot be used together with visibility or affiliation
            parameters, otherwise a 422 error will be reported"
        per_page:
          type: number
          default: 20
          description: Number of results per page
        direction:
          enum:
            - asc
            - desc
          type: string
          default: asc
          description: "Sorting direction: ascending (asc), descending (desc). Default: asc"
        visibility:
          enum:
            - public
            - private
            - all
          type: string
          description: Visibility of repository
        affiliation:
          enum:
            - owner
            - collaborator
            - organization_member
            - enterprise_member
            - admin
          type: string
          description: Affiliation between user and repository
  - name: merge_pull
    description: Merge a pull request
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
      properties:
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        title:
          type: string
          description: The title of the merge commit
        number:
          type: number
          description: The number of the pull request
        description:
          type: string
          description: The description of the merge commit
        merge_method:
          enum:
            - merge
            - squash
            - rebase
          type: string
          default: merge
          description: The merge method to use
        close_related_issue:
          type: boolean
          description: Whether to close the related issue after merging
        prune_source_branch:
          type: boolean
          description: Whether to delete the source branch after merging
  - name: update_issue
    description: Update an issue
    inputSchema:
      type: object
      required:
        - number
        - owner
        - repo
        - title
      properties:
        body:
          type: string
          description: The description of the issue
        repo:
          type: string
          description: The path of the repository
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        state:
          enum:
            - open
            - progressing
            - closed
          type: string
          description: The state of the issue
        title:
          type: string
          description: The title of the issue
        labels:
          type: string
          description: "Comma-separated labels, name requirements are between 2-20 in
            length and non-special characters. Example: bug,performance"
        number:
          type: string
          description: The number of the issue
        program:
          type: string
          description: Project ID
        assignee:
          type: string
          description: The personal space address of the issue assignee
        milestone:
          type: string
          description: The milestone number
        issue_type:
          type: string
          description: Enterprise custom task type, non-enterprise users must consider it
            as 'task'
        collaborators:
          type: string
          description: The personal space addresses of issue collaborators, separated by
            commas
  - name: update_pull
    description: Update a pull request
    inputSchema:
      type: object
      required:
        - owner
        - repo
        - number
      properties:
        body:
          type: string
          description: The body of the pull request
        repo:
          type: string
          description: The path of the repository
        draft:
          type: boolean
          description: Whether to set the pull request as draft
        issue:
          type: string
          description: The issue of the pull request
        owner:
          type: string
          description: The space address to which the repository belongs (the address path
            of the enterprise, organization or individual)
        state:
          enum:
            - closed
            - open
          type: string
          description: The state of the pull request
        title:
          type: string
          description: The title of the pull request
        labels:
          type: string
          description: "The labels of the pull request. example: bug,performance"
        number:
          type: number
          description: The number of the pull request
        testers:
          type: string
          description: "The testers of the pull request, example: (username1,username2)"
        assignees:
          type: string
          description: "The assignees of the pull request, example: (username1,username2)"
        testers_number:
          type: number
          description: The min number of testers need accept of the pull request
        assignees_number:
          type: number
          description: The min number of assignees need accept of the pull request
        milestone_number:
          type: string
          description: The milestone number of the pull request
