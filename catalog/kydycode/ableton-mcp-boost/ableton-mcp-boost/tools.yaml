tools:
  - name: get_session_info
    description: Get detailed information about the current Ableton session
    inputSchema:
      type: object
      title: get_session_infoArguments
      properties: {}
  - name: get_track_info
    description: "

      \    Get detailed information about a specific track in Ableton.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track to get information about

      \    "
    inputSchema:
      type: object
      title: get_track_infoArguments
      required:
        - track_index
      properties:
        track_index:
          type: integer
          title: Track Index
  - name: create_midi_track
    description: "

      \    Create a new MIDI track in the Ableton session.

      \   \ 

      \    Parameters:

      \    - index: The index to insert the track at (-1 = end of list)

      \    "
    inputSchema:
      type: object
      title: create_midi_trackArguments
      properties:
        index:
          type: integer
          title: Index
          default: -1
  - name: set_track_name
    description: "

      \    Set the name of a track.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track to rename

      \    - name: The new name for the track

      \    "
    inputSchema:
      type: object
      title: set_track_nameArguments
      required:
        - track_index
        - name
      properties:
        name:
          type: string
          title: Name
        track_index:
          type: integer
          title: Track Index
  - name: create_clip
    description: "

      \    Create a new MIDI clip in the specified track and clip slot.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track to create the clip in

      \    - clip_index: The index of the clip slot to create the clip in

      \    - length: The length of the clip in beats (default: 4.0)

      \    "
    inputSchema:
      type: object
      title: create_clipArguments
      required:
        - track_index
        - clip_index
      properties:
        length:
          type: number
          title: Length
          default: 4
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: add_notes_to_clip
    description: "

      \    Add MIDI notes to a clip.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    - notes: List of note dictionaries, each with pitch, start_time,
      duration, velocity, and mute

      \    "
    inputSchema:
      type: object
      title: add_notes_to_clipArguments
      required:
        - track_index
        - clip_index
        - notes
      properties:
        notes:
          type: array
          items:
            type: object
            additionalProperties:
              anyOf:
                - type: integer
                - type: number
                - type: boolean
          title: Notes
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: set_clip_name
    description: "

      \    Set the name of a clip.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    - name: The new name for the clip

      \    "
    inputSchema:
      type: object
      title: set_clip_nameArguments
      required:
        - track_index
        - clip_index
        - name
      properties:
        name:
          type: string
          title: Name
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: set_tempo
    description: "

      \    Set the tempo of the Ableton session.

      \   \ 

      \    Parameters:

      \    - tempo: The new tempo in BPM

      \    "
    inputSchema:
      type: object
      title: set_tempoArguments
      required:
        - tempo
      properties:
        tempo:
          type: number
          title: Tempo
  - name: load_instrument_or_effect
    description: "

      \    Load an instrument or effect onto a track using its URI.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track to load the instrument on

      \    - uri: The URI of the instrument or effect to load (e.g.,
      'query:Synths#Instrument%20Rack:Bass:FileId_5116')

      \    "
    inputSchema:
      type: object
      title: load_instrument_or_effectArguments
      required:
        - track_index
        - uri
      properties:
        uri:
          type: string
          title: Uri
        track_index:
          type: integer
          title: Track Index
  - name: fire_clip
    description: "

      \    Start playing a clip.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    "
    inputSchema:
      type: object
      title: fire_clipArguments
      required:
        - track_index
        - clip_index
      properties:
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: stop_clip
    description: "

      \    Stop playing a clip.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    "
    inputSchema:
      type: object
      title: stop_clipArguments
      required:
        - track_index
        - clip_index
      properties:
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: start_playback
    description: Start playing the Ableton session.
    inputSchema:
      type: object
      title: start_playbackArguments
      properties: {}
  - name: stop_playback
    description: Stop playing the Ableton session.
    inputSchema:
      type: object
      title: stop_playbackArguments
      properties: {}
  - name: setup_project_follow_actions
    description: "

      \    Setup follow actions for all tracks in the project.

      \    This sets all clips to play in sequence (top to bottom) on each
      track.

      \   \ 

      \    Parameters:

      \    - loop_back: Whether the last clip should loop back to the first clip
      in each track (default: True)

      \    "
    inputSchema:
      type: object
      title: setup_project_follow_actionsArguments
      properties:
        loop_back:
          type: boolean
          title: Loop Back
          default: true
  - name: get_browser_tree
    description: "

      \    Get a hierarchical tree of browser categories from Ableton.

      \   \ 

      \    Parameters:

      \    - category_type: Type of categories to get ('all', 'instruments',
      'sounds', 'drums', 'audio_effects', 'midi_effects')

      \    "
    inputSchema:
      type: object
      title: get_browser_treeArguments
      properties:
        category_type:
          type: string
          title: Category Type
          default: all
  - name: get_browser_items_at_path
    description: "

      \    Get browser items at a specific path in Ableton's browser.

      \   \ 

      \    Parameters:

      \    - path: Path in the format \"category/folder/subfolder\"

      \            where category is one of the available browser categories in
      Ableton

      \    "
    inputSchema:
      type: object
      title: get_browser_items_at_pathArguments
      required:
        - path
      properties:
        path:
          type: string
          title: Path
  - name: load_drum_kit
    description: "

      \    Load a drum rack and then load a specific drum kit into it.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track to load on

      \    - rack_uri: The URI of the drum rack to load (e.g., 'Drums/Drum
      Rack')

      \    - kit_path: Path to the drum kit inside the browser (e.g.,
      'drums/acoustic/kit1')

      \    "
    inputSchema:
      type: object
      title: load_drum_kitArguments
      required:
        - track_index
        - rack_uri
        - kit_path
      properties:
        kit_path:
          type: string
          title: Kit Path
        rack_uri:
          type: string
          title: Rack Uri
        track_index:
          type: integer
          title: Track Index
  - name: create_arrangement_section
    description: "

      \    Create a section in the arrangement (intro, verse, chorus, etc.) by
      duplicating clips into the arrangement view.

      \   \ 

      \    Parameters:

      \    - section_type: Type of section to create (e.g. 'intro', 'verse',
      'chorus', 'bridge', 'outro')

      \    - length_bars: Length of the section in bars

      \    - start_bar: Bar position to start the section (default: end of
      arrangement)

      \    "
    inputSchema:
      type: object
      title: create_arrangement_sectionArguments
      required:
        - section_type
        - length_bars
      properties:
        start_bar:
          type: integer
          title: Start Bar
          default: -1
        length_bars:
          type: integer
          title: Length Bars
        section_type:
          type: string
          title: Section Type
  - name: duplicate_section
    description: "

      \    Duplicate a section of the arrangement with optional variations.

      \   \ 

      \    Parameters:

      \    - source_start_bar: Start bar of the section to duplicate

      \    - source_end_bar: End bar of the section to duplicate

      \    - destination_bar: Bar position to paste the duplicated section

      \    - variation_level: Amount of variation to apply (0.0 = exact copy,
      1.0 = maximum variation)

      \    "
    inputSchema:
      type: object
      title: duplicate_sectionArguments
      required:
        - source_start_bar
        - source_end_bar
        - destination_bar
      properties:
        source_end_bar:
          type: integer
          title: Source End Bar
        destination_bar:
          type: integer
          title: Destination Bar
        variation_level:
          type: number
          title: Variation Level
          default: 0
        source_start_bar:
          type: integer
          title: Source Start Bar
  - name: create_transition
    description: "

      \    Create a transition between two sections in the arrangement.

      \   \ 

      \    Parameters:

      \    - from_bar: Bar position where the transition starts

      \    - to_bar: Bar position where the transition ends

      \    - transition_type: Type of transition to create ('fill', 'riser',
      'impact', 'downlifter', 'uplifter', 'cut')

      \    - length_beats: Length of the transition in beats

      \    "
    inputSchema:
      type: object
      title: create_transitionArguments
      required:
        - from_bar
        - to_bar
        - transition_type
      properties:
        to_bar:
          type: integer
          title: To Bar
        from_bar:
          type: integer
          title: From Bar
        length_beats:
          type: integer
          title: Length Beats
          default: 4
        transition_type:
          type: string
          title: Transition Type
  - name: convert_session_to_arrangement
    description: "

      \    Convert session clips to arrangement based on specified structure.

      \   \ 

      \    Parameters:

      \    - structure: List of sections to create, each with a type, length and
      optional track selection

      \                 Example: [{\"type\": \"intro\", \"length_bars\": 8},
      {\"type\": \"verse\", \"length_bars\": 16}]

      \    "
    inputSchema:
      type: object
      title: convert_session_to_arrangementArguments
      required:
        - structure
      properties:
        structure:
          type: array
          items:
            type: object
            additionalProperties:
              anyOf:
                - type: string
                - type: integer
          title: Structure
  - name: set_clip_follow_action_time
    description: "

      \    Set the follow action time for a clip in beats.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    - time_beats: The time in beats after which the follow action will be
      triggered

      \    "
    inputSchema:
      type: object
      title: set_clip_follow_action_timeArguments
      required:
        - track_index
        - clip_index
        - time_beats
      properties:
        clip_index:
          type: integer
          title: Clip Index
        time_beats:
          type: number
          title: Time Beats
        track_index:
          type: integer
          title: Track Index
  - name: set_clip_follow_action
    description: "

      \    Set the follow action for a clip.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    - action_type: The type of follow action to set ('none', 'next',
      'prev', 'first', 'last', 'any', 'other')

      \    - probability: The probability of this action being triggered (0.0 to
      1.0, default: 1.0)

      \    "
    inputSchema:
      type: object
      title: set_clip_follow_actionArguments
      required:
        - track_index
        - clip_index
        - action_type
      properties:
        clip_index:
          type: integer
          title: Clip Index
        action_type:
          type: string
          title: Action Type
        probability:
          type: number
          title: Probability
          default: 1
        track_index:
          type: integer
          title: Track Index
  - name: set_clip_follow_action_linked
    description: "

      \    Set whether the follow action timing is linked to the clip length.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clip

      \    - clip_index: The index of the clip slot containing the clip

      \    - linked: Whether the follow action time should be linked to the clip
      length (default: True)

      \    "
    inputSchema:
      type: object
      title: set_clip_follow_action_linkedArguments
      required:
        - track_index
        - clip_index
      properties:
        linked:
          type: boolean
          title: Linked
          default: true
        clip_index:
          type: integer
          title: Clip Index
        track_index:
          type: integer
          title: Track Index
  - name: setup_clip_sequence
    description: "

      \    Setup a sequence of clips with follow actions to play in order.

      \   \ 

      \    Parameters:

      \    - track_index: The index of the track containing the clips

      \    - start_clip_index: The index of the first clip in the sequence

      \    - end_clip_index: The index of the last clip in the sequence

      \    "
    inputSchema:
      type: object
      title: setup_clip_sequenceArguments
      required:
        - track_index
        - start_clip_index
        - end_clip_index
      properties:
        track_index:
          type: integer
          title: Track Index
        end_clip_index:
          type: integer
          title: End Clip Index
        start_clip_index:
          type: integer
          title: Start Clip Index
