tools:
  - name: Get a project by ID
    description: Get a project by ID.
    inputSchema:
      type: object
      title: get_projectArguments
      required:
        - project_id
      properties:
        project_id:
          type: integer
          title: Project Id
  - name: Get all projects
    description: Get all projects.
    inputSchema:
      type: object
      title: get_projectsArguments
      properties: {}
  - name: Add a new project
    description: "

      \            Add a new project.

      \           \ 

      \            Args:

      \                name: The name of the project

      \                announcement: The announcement of the project (optional)

      \                show_announcement: Whether to show the announcement
      (optional)

      \                suite_mode: The suite mode: 1 for single suite mode, 2
      for single suite + baselines, 3 for multiple suites (optional)

      \            "
    inputSchema:
      type: object
      title: add_projectArguments
      required:
        - name
      properties:
        name:
          type: string
          title: Name
        suite_mode:
          anyOf:
            - type: integer
            - type: "null"
          title: Suite Mode
          default: null
        announcement:
          anyOf:
            - type: string
            - type: "null"
          title: Announcement
          default: null
        show_announcement:
          anyOf:
            - type: boolean
            - type: "null"
          title: Show Announcement
          default: null
  - name: Update an existing project
    description: "

      \            Update an existing project.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \                name: The name of the project (optional)

      \                announcement: The announcement of the project (optional)

      \                show_announcement: Whether to show the announcement
      (optional)

      \                is_completed: Whether the project is completed (optional)

      \            "
    inputSchema:
      type: object
      title: update_projectArguments
      required:
        - project_id
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
          default: null
        project_id:
          type: integer
          title: Project Id
        announcement:
          anyOf:
            - type: string
            - type: "null"
          title: Announcement
          default: null
        is_completed:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Completed
          default: null
        show_announcement:
          anyOf:
            - type: boolean
            - type: "null"
          title: Show Announcement
          default: null
  - name: Delete a project
    description: "

      \            Delete a project.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \            "
    inputSchema:
      type: object
      title: delete_projectArguments
      required:
        - project_id
      properties:
        project_id:
          type: integer
          title: Project Id
  - name: Get a test case by ID
    description: "

      \            Get a test case by ID.

      \           \ 

      \            Args:

      \                case_id: The ID of the test case

      \            "
    inputSchema:
      type: object
      title: get_caseArguments
      required:
        - case_id
      properties:
        case_id:
          type: integer
          title: Case Id
  - name: Get all test cases for a project/suite
    description: "

      \            Get all test cases for a project/suite.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \                suite_id: The ID of the test suite (optional)

      \            "
    inputSchema:
      type: object
      title: get_casesArguments
      required:
        - project_id
      properties:
        suite_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Suite Id
          default: null
        project_id:
          type: integer
          title: Project Id
  - name: Add a new test case
    description: "

      \            Add a new test case.

      \           \ 

      \            Args:

      \                section_id: The ID of the section

      \                title: The title of the test case

      \                type_id: The ID of the case type (optional)

      \                priority_id: The ID of the priority (optional)

      \                estimate: The estimate, e.g. '30s' or '1m 45s' (optional)

      \                milestone_id: The ID of the milestone (optional)

      \                refs: A comma-separated list of references (optional)

      \            "
    inputSchema:
      type: object
      title: add_caseArguments
      required:
        - section_id
        - title
      properties:
        refs:
          anyOf:
            - type: string
            - type: "null"
          title: Refs
          default: null
        title:
          type: string
          title: Title
        type_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Type Id
          default: null
        estimate:
          anyOf:
            - type: string
            - type: "null"
          title: Estimate
          default: null
        section_id:
          type: integer
          title: Section Id
        priority_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Priority Id
          default: null
        milestone_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Milestone Id
          default: null
  - name: Update an existing test case
    description: "

      \            Update an existing test case.

      \           \ 

      \            Args:

      \                case_id: The ID of the test case

      \                title: The title of the test case (optional)

      \                type_id: The ID of the case type (optional)

      \                priority_id: The ID of the priority (optional)

      \                estimate: The estimate, e.g. '30s' or '1m 45s' (optional)

      \                milestone_id: The ID of the milestone (optional)

      \                refs: A comma-separated list of references (optional)

      \            "
    inputSchema:
      type: object
      title: update_caseArguments
      required:
        - case_id
      properties:
        refs:
          anyOf:
            - type: string
            - type: "null"
          title: Refs
          default: null
        title:
          anyOf:
            - type: string
            - type: "null"
          title: Title
          default: null
        case_id:
          type: integer
          title: Case Id
        type_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Type Id
          default: null
        estimate:
          anyOf:
            - type: string
            - type: "null"
          title: Estimate
          default: null
        priority_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Priority Id
          default: null
        milestone_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Milestone Id
          default: null
  - name: Delete a test case
    description: "

      \            Delete a test case.

      \           \ 

      \            Args:

      \                case_id: The ID of the test case

      \            "
    inputSchema:
      type: object
      title: delete_caseArguments
      required:
        - case_id
      properties:
        case_id:
          type: integer
          title: Case Id
  - name: Get a test run by ID
    description: "

      \            Get a test run by ID.

      \           \ 

      \            Args:

      \                run_id: The ID of the test run

      \            "
    inputSchema:
      type: object
      title: get_runArguments
      required:
        - run_id
      properties:
        run_id:
          type: integer
          title: Run Id
  - name: Get all test runs for a project
    description: "

      \            Get all test runs for a project.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \            "
    inputSchema:
      type: object
      title: get_runsArguments
      required:
        - project_id
      properties:
        project_id:
          type: integer
          title: Project Id
  - name: Add a new test run
    description: "

      \            Add a new test run.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \                suite_id: The ID of the test suite

      \                name: The name of the test run

      \                description: The description of the test run (optional)

      \                milestone_id: The ID of the milestone (optional)

      \                assignedto_id: The ID of the user the test run should be
      assigned to (optional)

      \                include_all: True for including all test cases of the
      test suite and false for a custom case selection (default: true)
      (optional)

      \                case_ids: An array of case IDs for the custom case
      selection (optional)

      \            "
    inputSchema:
      type: object
      title: add_runArguments
      required:
        - project_id
        - suite_id
        - name
      properties:
        name:
          type: string
          title: Name
        case_ids:
          anyOf:
            - type: array
              items:
                type: integer
            - type: "null"
          title: Case Ids
          default: null
        suite_id:
          type: integer
          title: Suite Id
        project_id:
          type: integer
          title: Project Id
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
          default: null
        include_all:
          anyOf:
            - type: boolean
            - type: "null"
          title: Include All
          default: null
        milestone_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Milestone Id
          default: null
        assignedto_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Assignedto Id
          default: null
  - name: Update an existing test run
    description: "

      \            Update an existing test run.

      \           \ 

      \            Args:

      \                run_id: The ID of the test run

      \                name: The name of the test run (optional)

      \                description: The description of the test run (optional)

      \                milestone_id: The ID of the milestone (optional)

      \                assignedto_id: The ID of the user the test run should be
      assigned to (optional)

      \                include_all: True for including all test cases of the
      test suite and false for a custom case selection (default: true)
      (optional)

      \                case_ids: An array of case IDs for the custom case
      selection (optional)

      \            "
    inputSchema:
      type: object
      title: update_runArguments
      required:
        - run_id
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
          default: null
        run_id:
          type: integer
          title: Run Id
        case_ids:
          anyOf:
            - type: array
              items:
                type: integer
            - type: "null"
          title: Case Ids
          default: null
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
          default: null
        include_all:
          anyOf:
            - type: boolean
            - type: "null"
          title: Include All
          default: null
        milestone_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Milestone Id
          default: null
        assignedto_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Assignedto Id
          default: null
  - name: Close an existing test run
    description: "

      \            Close an existing test run.

      \           \ 

      \            Args:

      \                run_id: The ID of the test run

      \            "
    inputSchema:
      type: object
      title: close_runArguments
      required:
        - run_id
      properties:
        run_id:
          type: integer
          title: Run Id
  - name: Delete a test run
    description: "

      \            Delete a test run.

      \           \ 

      \            Args:

      \                run_id: The ID of the test run

      \            "
    inputSchema:
      type: object
      title: delete_runArguments
      required:
        - run_id
      properties:
        run_id:
          type: integer
          title: Run Id
  - name: Get all test results for a test
    description: "

      \            Get all test results for a test.

      \           \ 

      \            Args:

      \                test_id: The ID of the test

      \            "
    inputSchema:
      type: object
      title: get_resultsArguments
      required:
        - test_id
      properties:
        test_id:
          type: integer
          title: Test Id
  - name: Add a new test result
    description: "

      \            Add a new test result.

      \           \ 

      \            Args:

      \                test_id: The ID of the test

      \                status_id: The ID of the test status

      \                comment: The comment / description for the test result
      (optional)

      \                version: The version or build you tested against
      (optional)

      \                elapsed: The time it took to execute the test, e.g. '30s'
      or '1m 45s' (optional)

      \                defects: A comma-separated list of defects to link to the
      test result (optional)

      \                assignedto_id: The ID of a user the test should be
      assigned to (optional)

      \            "
    inputSchema:
      type: object
      title: add_resultArguments
      required:
        - test_id
        - status_id
      properties:
        comment:
          anyOf:
            - type: string
            - type: "null"
          title: Comment
          default: null
        defects:
          anyOf:
            - type: string
            - type: "null"
          title: Defects
          default: null
        elapsed:
          anyOf:
            - type: string
            - type: "null"
          title: Elapsed
          default: null
        test_id:
          type: integer
          title: Test Id
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
          default: null
        status_id:
          type: integer
          title: Status Id
        assignedto_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Assignedto Id
          default: null
  - name: Get a dataset by ID
    description: "

      \            Get a dataset by ID.

      \           \ 

      \            Args:

      \                dataset_id: The ID of the dataset

      \            "
    inputSchema:
      type: object
      title: get_datasetArguments
      required:
        - dataset_id
      properties:
        dataset_id:
          type: integer
          title: Dataset Id
  - name: Get all datasets for a project
    description: "

      \            Get all datasets for a project.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \            "
    inputSchema:
      type: object
      title: get_datasetsArguments
      required:
        - project_id
      properties:
        project_id:
          type: integer
          title: Project Id
  - name: Add a new dataset
    description: "

      \            Add a new dataset.

      \           \ 

      \            Args:

      \                project_id: The ID of the project

      \                name: The name of the dataset

      \                description: The description of the dataset (optional)

      \            "
    inputSchema:
      type: object
      title: add_datasetArguments
      required:
        - project_id
        - name
      properties:
        name:
          type: string
          title: Name
        project_id:
          type: integer
          title: Project Id
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
          default: null
  - name: Update an existing dataset
    description: "

      \            Update an existing dataset.

      \           \ 

      \            Args:

      \                dataset_id: The ID of the dataset

      \                name: The name of the dataset (optional)

      \                description: The description of the dataset (optional)

      \            "
    inputSchema:
      type: object
      title: update_datasetArguments
      required:
        - dataset_id
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
          default: null
        dataset_id:
          type: integer
          title: Dataset Id
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
          default: null
  - name: Delete a dataset
    description: "

      \            Delete a dataset.

      \           \ 

      \            Args:

      \                dataset_id: The ID of the dataset

      \            "
    inputSchema:
      type: object
      title: delete_datasetArguments
      required:
        - dataset_id
      properties:
        dataset_id:
          type: integer
          title: Dataset Id
