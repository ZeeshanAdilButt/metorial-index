tools:
  - name: get_person_profile
    description: "

      \        Scrape a person's LinkedIn profile.


      \        Args:

      \            linkedin_url (str): The LinkedIn URL of the person's profile


      \        Returns:

      \            Dict[str, Any]: Structured data from the person's profile

      \        "
    inputSchema:
      type: object
      title: get_person_profileArguments
      required:
        - linkedin_url
      properties:
        linkedin_url:
          type: string
          title: Linkedin Url
  - name: get_company_profile
    description: "

      \        Scrape a company's LinkedIn profile.


      \        Args:

      \            linkedin_url (str): The LinkedIn URL of the company's profile

      \            get_employees (bool): Whether to scrape the company's
      employees (slower)


      \        Returns:

      \            Dict[str, Any]: Structured data from the company's profile

      \        "
    inputSchema:
      type: object
      title: get_company_profileArguments
      required:
        - linkedin_url
      properties:
        linkedin_url:
          type: string
          title: Linkedin Url
        get_employees:
          type: boolean
          title: Get Employees
          default: false
  - name: get_job_details
    description: "

      \        Scrape job details from a LinkedIn job posting.


      \        Args:

      \            job_url (str): The LinkedIn URL of the job posting


      \        Returns:

      \            Dict[str, Any]: Structured data from the job posting

      \        "
    inputSchema:
      type: object
      title: get_job_detailsArguments
      required:
        - job_url
      properties:
        job_url:
          type: string
          title: Job Url
  - name: search_jobs
    description: "

      \        Search for jobs on LinkedIn with the given search term.


      \        Args:

      \            search_term (str): The job search query


      \        Returns:

      \            List[Dict[str, Any]]: List of job search results

      \        "
    inputSchema:
      type: object
      title: search_jobsArguments
      required:
        - search_term
      properties:
        search_term:
          type: string
          title: Search Term
  - name: get_recommended_jobs
    description: "

      \        Get recommended jobs from your LinkedIn homepage.


      \        Returns:

      \            List[Dict[str, Any]]: List of recommended jobs

      \        "
    inputSchema:
      type: object
      title: get_recommended_jobsArguments
      properties: {}
  - name: close_session
    description: Close the current browser session and clean up resources.
    inputSchema:
      type: object
      title: close_sessionArguments
      properties: {}
