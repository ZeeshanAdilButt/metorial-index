tools:
  - name: profiles
    description: "Can scrape up to 100 profiles data in a go

      \   \ 

      \    Request Body Example:

      \    {

      \        \"links\": [

      \            \"http://www.linkedin.com/in/luke-sharp-b3838719a\",

      \            \"http://www.linkedin.com/in/hollie-smith-96ab44b5\"

      \        ]

      \    }

      \    "
    inputSchema:
      type: object
      title: profilesArguments
      required:
        - links
      properties:
        links:
          type: array
          items:
            type: string
          title: Links
  - name: companies
    description: "Can scrape up to 100 companies data in a go

      \   \ 

      \    Request Body Example:

      \    {

      \        \"links\": [

      \            \"https://www.linkedin.com/company/huzzle-app/\",

      \            \"http://www.linkedin.com/company/aep-energy\"

      \        ],

      \        \"count\": 1

      \    }

      \    "
    inputSchema:
      type: object
      title: companiesArguments
      required:
        - links
      properties:
        links:
          type: array
          items:
            type: string
          title: Links
  - name: company_posts
    description: "Can scrape 100 posts of 50 linkedin companies

      \   \ 

      \    Request Body Example:

      \    {

      \        \"links\": [

      \            \"https://www.linkedin.com/company/huzzle-app/\",

      \            \"http://www.linkedin.com/company/aep-energy\"

      \        ],

      \        \"count\": 1

      \    }

      \    "
    inputSchema:
      type: object
      title: company_postsArguments
      required:
        - links
      properties:
        count:
          type: integer
          title: Count
          default: 1
        links:
          type: array
          items:
            type: string
          title: Links
  - name: person
    description: "Scrapes all data of a person from linkedin

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: personArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: person_urn
    description: "Scrapes all data from a person's page using his profile URN

      \   \ 

      \    NOTE: This tool failed during testing (status 400, error: Failed to
      scrape profile).

      \    The API documentation is unclear if this expects a URN string or a
      full profile link with URN.


      \    Request Body Example:

      \    {

      \        \"link\":
      \"https://www.linkedin.com/in/ACoAACeIPPkBUymOGNvgfbBL_uhKc32Hg_g_haU\"\ 

      \    }

      \    "
    inputSchema:
      type: object
      title: person_urnArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: person_skills
    description: "Scrapes all skills of a linkedin user

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: person_skillsArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: search_people_with_filters
    description: "Search for people from linkedin using all filters as per linkedin

      \   \ 

      \    Request Body Example:

      \    {

      \        \"keyword\": \"ingmar\",\ 

      \        \"page\": 1,\ 

      \        \"title_free_text\": \"CEO\",\ 

      \        \"company_free_text\": \"Huzzle\",\ 

      \        \"first_name\": \"Ingmar\",\ 

      \        \"last_name\": \"Klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: search_people_with_filtersArguments
      required:
        - keyword
      properties:
        page:
          type: integer
          title: Page
          default: 1
        keyword:
          type: string
          title: Keyword
        last_name:
          type: string
          title: Last Name
          default: null
        first_name:
          type: string
          title: First Name
          default: null
        title_free_text:
          type: string
          title: Title Free Text
          default: null
        company_free_text:
          type: string
          title: Company Free Text
          default: null
  - name: company
    description: "Scrapes all data from a provided company url

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/company/huzzle-app\"

      \    }

      \    "
    inputSchema:
      type: object
      title: companyArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: company_jobs
    description: "Scrapes jobs of a specific linkedin company

      \   \ 

      \    Request Body Example:

      \    {

      \        \"company_url\": \"https://www.linkedin.com/company/google\",

      \        \"starts_from\": 0,

      \        \"count\": 10

      \    }

      \    "
    inputSchema:
      type: object
      title: company_jobsArguments
      required:
        - company_url
      properties:
        count:
          type: integer
          title: Count
          default: 10
        company_url:
          type: string
          title: Company Url
        starts_from:
          type: integer
          title: Starts From
          default: 0
  - name: search_company_with_filters
    description: "Search for companies as per linkedin search engine

      \   \ 

      \    Request Body Example:

      \    {

      \        \"keyword\": \"G\",\ 

      \        \"page\": 1,\ 

      \        \"company_size_list\": \"A,D\",\ 

      \        \"hasJobs\": false,\ 

      \        \"location_list\": \"\",\ 

      \        \"industry_list\": \"\"

      \    }

      \    "
    inputSchema:
      type: object
      title: search_company_with_filtersArguments
      required:
        - keyword
      properties:
        page:
          type: integer
          title: Page
          default: 1
        hasJobs:
          type: boolean
          title: Hasjobs
          default: false
        keyword:
          type: string
          title: Keyword
        industry_list:
          type: string
          title: Industry List
          default: null
        location_list:
          type: string
          title: Location List
          default: null
        company_size_list:
          type: string
          title: Company Size List
          default: null
  - name: post
    description: "Scrapes post data by a person/company using its linkedin url

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\":
      \"https://www.linkedin.com/feed/update/urn:li:activity:7219434359085252608\
      \"

      \    }

      \    "
    inputSchema:
      type: object
      title: postArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: search_posts
    description: "Search posts as per linkedin.com search engine (with filters)

      \   \ 

      \    Request Body Example:

      \    {

      \        \"page\": 1,

      \        \"query\": \"Top 10\",

      \        \"filters\": [

      \            {

      \                \"key\": \"datePosted\",

      \                \"values\": \"past-week\"

      \            }

      \        ]

      \    }

      \    "
    inputSchema:
      type: object
      title: search_postsArguments
      required:
        - query
      properties:
        page:
          type: integer
          title: Page
          default: 1
        query:
          type: string
          title: Query
        filters:
          type: array
          items:
            type: object
            additionalProperties: true
          title: Filters
          default: null
  - name: profile_updates
    description: "Scrapes updates posted by a linkedin user


      \    NOTE: API doc specifies profile_url and page as required GET
      parameters.

      \   \ 

      \    Get Request Parameters:

      \    - profile_url: LinkedIn profile URL (paramType: STRING, required)
      (e.g., \"http://www.linkedin.com/in/ingmar-klein\")

      \    - page: Page number (paramType: NUMBER, required) (e.g., 1)

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: profile_updatesArguments
      required:
        - profile_url
      properties:
        page:
          type: integer
          title: Page
          default: 1
        profile_url:
          type: string
          title: Profile Url
        paginationToken:
          type: string
          title: Paginationtoken
          default: null
  - name: comments_from_recent_activity
    description: "Scrapes comments posted by a person as per his recent activity


      \    NOTE: API doc specifies profile_url and page as required GET
      parameters.

      \   \ 

      \    Get Request Parameters:

      \    - profile_url: LinkedIn profile URL (paramType: STRING, required)
      (e.g., \"http://www.linkedin.com/in/ingmar-klein\")

      \    - page: Page number (paramType: NUMBER, required) (e.g., 1)

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: comments_from_recent_activityArguments
      required:
        - profile_url
      properties:
        page:
          type: integer
          title: Page
          default: 1
        profile_url:
          type: string
          title: Profile Url
        paginationToken:
          type: string
          title: Paginationtoken
          default: null
  - name: company_updates
    description: "Scrapes updates of a given company


      \    NOTE: API doc specifies company_url and page as required GET
      parameters.

      \   \ 

      \    Get Request Parameters:

      \    - company_url: LinkedIn company URL (paramType: STRING, required)
      (e.g., \"https://www.linkedin.com/company/google\")

      \    - page: Page number (paramType: STRING, required) (e.g., \"1\")

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: company_updatesArguments
      required:
        - company_url
      properties:
        page:
          type: string
          title: Page
          default: "1"
        company_url:
          type: string
          title: Company Url
        paginationToken:
          type: string
          title: Paginationtoken
          default: null
  - name: company_employee_count_per_skill
    description: "Get employee count with specific skill at a company


      \    NOTE: API doc example uses camelCase 'companyUrl' in the request
      body.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"keyword\": \"java\",

      \        \"companyUrl\": \"https://www.linkedin.com/company/google\"

      \    }

      \    "
    inputSchema:
      type: object
      title: company_employee_count_per_skillArguments
      required:
        - keyword
        - company_url
      properties:
        keyword:
          type: string
          title: Keyword
        company_url:
          type: string
          title: Company Url
  - name: school_alumini_count_per_skill
    description: "Returns alumni count of a school/university


      \    NOTE: API doc example uses camelCase 'schoolUrl' in the request body.

      \    NOTE: This tool failed during testing with 400 Bad Request.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"keyword\": \"\",

      \        \"schoolUrl\":
      \"https://www.linkedin.com/school/abertay-university\",

      \        \"skillExplicits\": \"260\"

      \    }

      \    "
    inputSchema:
      type: object
      title: school_alumini_count_per_skillArguments
      required:
        - keyword
        - schoolUrl
      properties:
        keyword:
          type: string
          title: Keyword
        schoolUrl:
          type: string
          title: Schoolurl
        skillExplicits:
          type: string
          title: Skillexplicits
          default: null
  - name: company_employee
    description: "Scrapes 12 people from a company (People Tab)


      \    NOTE: API doc specifies company_id and page as required GET
      parameters.

      \    NOTE: This tool failed persistently during testing (status 400,
      error: Couldn't recognize the parameter keys provided), unable to
      recognize parameters even when matching doc.

      \   \ 

      \    Get Request Parameters:

      \    - company_id: LinkedIn company ID (paramType: STRING, required)
      (e.g., \"1441\" for Google)

      \    - page: Page number (paramType: NUMBER, required) (e.g., 1)

      \    "
    inputSchema:
      type: object
      title: company_employeeArguments
      required:
        - company_id
      properties:
        page:
          type: integer
          title: Page
          default: 1
        company_id:
          type: string
          title: Company Id
  - name: post_reactions
    description: "Data of the people who reacted to a particular post


      \    NOTE: Obtain 'reactionsUrn' from 'Company Updates' or 'Profile
      Updates' endpoints.

      \   \ 

      \    Get Request Parameters:

      \    - reactionsUrn: URN for the post reactions (paramType: STRING,
      required) (e.g., \"urn:li:activity:7219434359085252608/reactions\")

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: post_reactionsArguments
      required:
        - reactions_urn
      properties:
        reactions_urn:
          type: string
          title: Reactions Urn
        pagination_token:
          type: string
          title: Pagination Token
          default: null
  - name: post_comments
    description: "Scrapes all commenters data who commented below a post


      \    NOTE: Obtain 'commentsUrn' from 'Company Updates' or 'Profile
      Updates' endpoints.


      \    Get Request Parameters:

      \    - commentsUrn: URN for the post comments (paramType: STRING,
      required) (e.g., \"urn:li:activity:7219434359085252608/comments\")

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: post_commentsArguments
      required:
        - comments_urn
      properties:
        comments_urn:
          type: string
          title: Comments Urn
        pagination_token:
          type: string
          title: Pagination Token
          default: null
  - name: post_reposts
    description: "Scrapes all Reposters data who reposted a post


      \    NOTE: Obtain 'repostsUrn' from 'Company Updates' or 'Profile Updates'
      endpoints.

      \   \ 

      \    Get Request Parameters:

      \    - repostsUrn: URN for the post reposts (paramType: STRING, required)
      (e.g., \"urn:li:activity:7219434359085252608/reposts\")

      \    - paginationToken: For pagination (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: post_repostsArguments
      required:
        - reposts_urn
      properties:
        reposts_urn:
          type: string
          title: Reposts Urn
        pagination_token:
          type: string
          title: Pagination Token
          default: null
  - name: search_posts_with_filters
    description: "Search for posts as per linkedin using all the available filters


      \    NOTE: API doc shows this endpoint uses different parameter names than
      previously implemented.

      \   \ 

      \    Get Request Parameters:

      \    - query: Search term (paramType: STRING, optional) (e.g., \"Top 10\")

      \    - sort_by: Sorting option (paramType: STRING, optional)

      \    - from_member: Filter by member (paramType: STRING, optional)

      \    - from_organization: Filter by organization (paramType: STRING,
      optional)

      \    - author_job_title: Filter by author's job title (paramType: STRING,
      optional)

      \    - author_company: Filter by author's company (paramType: STRING,
      optional)

      \    - content_type: Filter by content type (paramType: STRING, optional)

      \    - mentions_organization: Filter by mentioned organization (paramType:
      STRING, optional)

      \    - author_industry: Filter by author's industry (paramType: STRING,
      optional)

      \    - mentions_member: Filter by mentioned member (paramType: STRING,
      optional)

      \    - page: Page number (paramType: STRING, optional) (e.g., \"1\")

      \    "
    inputSchema:
      type: object
      title: search_posts_with_filtersArguments
      properties:
        page:
          type: string
          title: Page
          default: "1"
        query:
          type: string
          title: Query
          default: null
        sort_by:
          type: string
          title: Sort By
          default: null
        from_member:
          type: string
          title: From Member
          default: null
        content_type:
          type: string
          title: Content Type
          default: null
        author_company:
          type: string
          title: Author Company
          default: null
        author_industry:
          type: string
          title: Author Industry
          default: null
        mentions_member:
          type: string
          title: Mentions Member
          default: null
        author_job_title:
          type: string
          title: Author Job Title
          default: null
        from_organization:
          type: string
          title: From Organization
          default: null
        mentions_organization:
          type: string
          title: Mentions Organization
          default: null
  - name: search_jobs
    description: "Search for jobs with filters as per linkedin


      \    NOTE: API doc shows this endpoint uses different parameter names than
      previously implemented.

      \   \ 

      \    Get Request Parameters:

      \    - query: Job search keywords (paramType: STRING, required) (e.g.,
      \"software engineer\")

      \    - page: Page number (paramType: STRING, required) (e.g., \"1\")

      \    - searchLocationId: Location ID (paramType: STRING, optional) (e.g.,
      \"Europe\")

      \    - experience: Experience level (paramType: STRING, optional)

      \    - postedAgo: Filter by post date (paramType: STRING, optional)

      \    - locationIdsList: List of location IDs (paramType: STRING, optional)

      \    - sortBy: Sort results by (paramType: STRING, optional)

      \    - titleIdsList: List of job title IDs (paramType: STRING, optional)

      \    - workplaceType: Type of workplace (paramType: STRING, optional)

      \    - functionIdsList: List of function IDs (paramType: STRING, optional)

      \    - industryIdsList: List of industry IDs (paramType: STRING, optional)

      \    - jobType: Type of job (paramType: STRING, optional)

      \    - companyIdsList: List of company IDs (paramType: STRING, optional)

      \    - easyApply: Filter for easy apply jobs (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: search_jobsArguments
      required:
        - query
      properties:
        page:
          type: string
          title: Page
          default: "1"
        query:
          type: string
          title: Query
        sortBy:
          type: string
          title: Sortby
          default: null
        jobType:
          type: string
          title: Jobtype
          default: null
        easyApply:
          type: string
          title: Easyapply
          default: null
        postedAgo:
          type: string
          title: Postedago
          default: null
        experience:
          type: string
          title: Experience
          default: null
        titleIdsList:
          type: string
          title: Titleidslist
          default: null
        workplaceType:
          type: string
          title: Workplacetype
          default: null
        companyIdsList:
          type: string
          title: Companyidslist
          default: null
        functionIdsList:
          type: string
          title: Functionidslist
          default: null
        industryIdsList:
          type: string
          title: Industryidslist
          default: null
        locationIdsList:
          type: string
          title: Locationidslist
          default: null
        searchLocationId:
          type: string
          title: Searchlocationid
          default: null
  - name: job_details
    description: "Get detailed information about a specific job

      \   \ 

      \    Get Request Parameters:

      \    - jobId: LinkedIn job ID (paramType: STRING, required) (e.g.,
      \"3862806121\" - obtain from search results)

      \    "
    inputSchema:
      type: object
      title: job_detailsArguments
      required:
        - job_id
      properties:
        job_id:
          type: string
          title: Job Id
  - name: similar_profiles
    description: "Returns similar profiles to a given linkedin profile url

      \   \ 

      \    Get Request Parameters:

      \    - profileUrl: LinkedIn profile URL (paramType: STRING, required)
      (e.g., \"https://www.linkedin.com/in/williamhgates/\")

      \    "
    inputSchema:
      type: object
      title: similar_profilesArguments
      required:
        - profileUrl
      properties:
        profileUrl:
          type: string
          title: Profileurl
  - name: suggestion_location
    description: "Suggestions per query

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g.,
      \"California\")

      \    "
    inputSchema:
      type: object
      title: suggestion_locationArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: suggestion_company
    description: "Suggestions per query

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g.,
      \"Google\")

      \    "
    inputSchema:
      type: object
      title: suggestion_companyArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: suggestion_school
    description: "Suggestions per query

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g.,
      \"Stanford\")

      \    "
    inputSchema:
      type: object
      title: suggestion_schoolArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: suggestion_industry
    description: "Suggestions per query

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g.,
      \"Technology\")

      \    "
    inputSchema:
      type: object
      title: suggestion_industryArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: suggestion_service_catagory
    description: "Suggestions as per query

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g.,
      \"Consulting\")

      \    "
    inputSchema:
      type: object
      title: suggestion_service_catagoryArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: suggestion_person
    description: "Returns a list of people suggestion from linkedin.

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, required) (e.g., \"Bill
      Gates\")

      \    "
    inputSchema:
      type: object
      title: suggestion_personArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: search_geourns
    description: "Suggestions per query


      \    NOTE: Failed during testing when keyword contained spaces (e.g.,
      \"New York\"). Needs URL encoding or API fix.

      \   \ 

      \    Get Request Parameters:

      \    - keyword: Search keyword (paramType: STRING, required) (e.g.,
      \"California\", avoid spaces)

      \    "
    inputSchema:
      type: object
      title: search_geournsArguments
      required:
        - keyword
      properties:
        keyword:
          type: string
          title: Keyword
  - name: suggestion_function
    description: "Gets suggestions for Job Function

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, optional) (e.g.,
      \"Engineering\")

      \    "
    inputSchema:
      type: object
      title: suggestion_functionArguments
      properties:
        query:
          type: string
          title: Query
          default: null
  - name: suggestion_company_size
    description: "Suggestions for company size filter

      \    "
    inputSchema:
      type: object
      title: suggestion_company_sizeArguments
      properties: {}
  - name: suggestion_language
    description: "Suggestions for language filter\n    "
    inputSchema:
      type: object
      title: suggestion_languageArguments
      properties: {}
  - name: profiles_david
    description: "Scrape 100 profiles in a single API call


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"links\": [

      \            \"http://www.linkedin.com/in/luke-sharp-b3838719a\",

      \            \"http://www.linkedin.com/in/hollie-smith-96ab44b5\"

      \        ]

      \    }

      \    "
    inputSchema:
      type: object
      title: profiles_davidArguments
      required:
        - links
      properties:
        links:
          type: array
          items:
            type: string
          title: Links
  - name: private_chtiouisk
    description: "This is a private endpoint for our premium user


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"links\": [

      \            \"http://www.linkedin.com/in/luke-sharp-b3838719a\",

      \            \"http://www.linkedin.com/in/rodneydbainjr\"

      \        ],

      \        \"count\": 5

      \    }

      \    "
    inputSchema:
      type: object
      title: private_chtiouiskArguments
      required:
        - links
      properties:
        count:
          type: integer
          title: Count
          default: 5
        links:
          type: array
          items:
            type: string
          title: Links
  - name: person_data_with_open_to_work_flag
    description: "Scrapes person data with open to work flag

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: person_data_with_open_to_work_flagArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: original_search_posts_with_filters
    description: "Search for posts as per linkedin using all the available filters


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Get Request Parameters:

      \    - query: Search query (paramType: STRING, optional)

      \    - author_company: Filter by author's company (paramType: STRING,
      optional)

      \    - author_job_title: Filter by author's job title (paramType: STRING,
      optional)

      \    - author_industry: Filter by author's industry (paramType: STRING,
      optional)

      \    - from_member: Filter by member (paramType: STRING, optional)

      \    - from_organization: Filter by organization (paramType: STRING,
      optional)

      \    - mentions_member: Filter by mentioned member (paramType: STRING,
      optional)

      \    - mentions_organization: Filter by mentioned organization (paramType:
      STRING, optional)

      \    - content_type: Filter by content type (paramType: STRING, optional)

      \    - sort_by: Sort results by (paramType: STRING, optional)

      \    - page: Page number (paramType: STRING, optional)

      \    "
    inputSchema:
      type: object
      title: original_search_posts_with_filtersArguments
      properties:
        page:
          type: string
          title: Page
          default: null
        query:
          type: string
          title: Query
          default: null
        sort_by:
          type: string
          title: Sort By
          default: null
        from_member:
          type: string
          title: From Member
          default: null
        content_type:
          type: string
          title: Content Type
          default: null
        author_company:
          type: string
          title: Author Company
          default: null
        author_industry:
          type: string
          title: Author Industry
          default: null
        mentions_member:
          type: string
          title: Mentions Member
          default: null
        author_job_title:
          type: string
          title: Author Job Title
          default: null
        from_organization:
          type: string
          title: From Organization
          default: null
        mentions_organization:
          type: string
          title: Mentions Organization
          default: null
  - name: private_company_insights_2
    description: "Private endpoint to scrapes company insights


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Get Request Parameters:

      \    - link: Company LinkedIn URL (paramType: STRING, required)

      \    "
    inputSchema:
      type: object
      title: private_company_insights_2Arguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: post_reposts_original
    description: "Private


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Get Request Parameters:

      \    - repostsUrn: URN for the post reposts (paramType: STRING, required)

      \    - page: Page number (paramType: STRING, required)

      \    "
    inputSchema:
      type: object
      title: post_reposts_originalArguments
      required:
        - repostsUrn
        - page
      properties:
        page:
          type: string
          title: Page
        repostsUrn:
          type: string
          title: Repostsurn
  - name: profile_updates_original
    description: "Private


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Get Request Parameters:

      \    - profile_url: LinkedIn profile URL (paramType: STRING, required)

      \    - page: Page number (paramType: STRING, required)

      \    "
    inputSchema:
      type: object
      title: profile_updates_originalArguments
      required:
        - profile_url
        - page
      properties:
        page:
          type: string
          title: Page
        profile_url:
          type: string
          title: Profile Url
  - name: company_updates_original
    description: "Original data


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Get Request Parameters:

      \    - company_url: LinkedIn company URL (paramType: STRING, required)

      \    - page: Page number (paramType: STRING, required)

      \    "
    inputSchema:
      type: object
      title: company_updates_originalArguments
      required:
        - company_url
        - page
      properties:
        page:
          type: integer
          title: Page
        company_url:
          type: string
          title: Company Url
  - name: profile_posts_all
    description: "This endpoint scrapes all posts posted by a user at linkedin.com
      since joined.


      \    NOTE: Marked as private/premium in documentation.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: profile_posts_allArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: person_data_with_experiences
    description: "Scrapes all linkedin profile data alongwith all the experiences.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: person_data_with_experiencesArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: person_data_with_languages
    description: "Scrapers person data with all languages data

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/matiss-brunavs/\"

      \    }

      \    "
    inputSchema:
      type: object
      title: person_data_with_languagesArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
  - name: person_data_with_educations
    description: "Scrapers person data along with all the educations data.

      \   \ 

      \    Request Body Example:

      \    {

      \        \"link\": \"https://www.linkedin.com/in/ingmar-klein\"

      \    }

      \    "
    inputSchema:
      type: object
      title: person_data_with_educationsArguments
      required:
        - link
      properties:
        link:
          type: string
          title: Link
