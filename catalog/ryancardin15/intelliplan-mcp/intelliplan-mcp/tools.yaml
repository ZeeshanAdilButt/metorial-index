tools:
  - name: createEpic
    description: Creates a new Epic (top-level task) with planning details and
      optional initial Task creation.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - description
        - basePath
      properties:
        goal:
          type: string
          description: Specific goal or objective for the Epic
        tasks:
          type: array
          items:
            type: string
          description: Initial high-level tasks (become Task items)
        basePath:
          type: string
          description: FULL directory path where Epic storage will be created (required,
            e.g., '/path/to/storage')
        priority:
          enum:
            - low
            - medium
            - high
          type: string
          description: Priority level
        complexity:
          type: string
          description: Complexity of the Epic
        description:
          type: string
          description: High-level description of the Epic (required)
        testStrategy:
          type: string
          description: Overall testing strategy for the Epic
        estimatedEffort:
          type: string
          description: Estimated effort for the Epic (e.g., S, M, L)
        acceptanceCriteria:
          type: array
          items:
            type: string
          description: Acceptance criteria for the Epic
        createTasksFromSteps:
          type: boolean
          default: true
          description: "Create Tasks from the 'tasks' list (default: true)"
      additionalProperties: false
  - name: manageItems
    description: Manages Epics, Tasks, and Subtasks.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - action
        - basePath
      properties:
        action:
          enum:
            - listEpics
            - updateEpic
            - deleteEpic
            - addEpicDependency
            - removeEpicDependency
            - addFileToEpic
            - removeFileFromEpic
            - createTask
            - updateTask
            - deleteTask
            - addTaskDependency
            - removeTaskDependency
            - addFileToTask
            - removeFileFromTask
            - createSubtask
            - updateSubtask
            - deleteSubtask
          type: string
        epicId:
          type: string
          format: uuid
          description: ID of the target Epic
        status:
          enum:
            - todo
            - in-progress
            - done
          type: string
          description: Task status
        taskId:
          type: string
          format: uuid
          description: ID of the target Task within an Epic
        details:
          type: string
        basePath:
          type: string
          description: FULL directory path for storage (required, e.g., '/path/to/storage')
        filePath:
          type: string
        priority:
          enum:
            - low
            - medium
            - high
          type: string
          description: Priority level
        dependsOn:
          type: string
          format: uuid
        subtaskId:
          type: string
          format: uuid
          description: ID of the target Subtask within a Task
        complexity:
          type: integer
          maximum: 10
          minimum: 1
          description: Complexity score (1-10)
        description:
          type: string
          description: Description text
        statusFilter:
          $ref: "#/properties/status"
          description: Task status
        subtaskStatus:
          enum:
            - todo
            - done
          type: string
          description: Subtask status
        fileDescription:
          $ref: "#/properties/description"
          description: Description text
        requireFileAssociation:
          type: boolean
          default: true
      additionalProperties: false
  - name: executeItem
    description: Executes or provides guidance for executing an Epic or Task.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - basePath
      properties:
        epicId:
          type: string
          format: uuid
          description: ID of the target Epic
        taskId:
          type: string
          format: uuid
          description: ID of the target Task within an Epic
        basePath:
          type: string
          description: FULL directory path for storage (required, e.g., '/path/to/storage')
        executionMode:
          enum:
            - auto
            - manual
            - subtasks
          type: string
          default: auto
        markInProgress:
          type: boolean
          default: true
        documentFindings:
          type: boolean
          default: true
        additionalContext:
          type: string
        requireFileAssociation:
          type: boolean
          default: true
      additionalProperties: false
  - name: getEpicOverview
    description: Provides a detailed, easy-to-read overview of an Epic, its tasks,
      and related information.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - basePath
      properties:
        mode:
          enum:
            - fullOverview
            - suggestNext
            - verify
          type: string
          default: fullOverview
          description: Information mode (required)
        epicId:
          type: string
          format: uuid
          description: Epic ID (required for 'fullOverview', 'verify')
        basePath:
          type: string
          description: FULL directory path for storage (required, e.g., '/path/to/storage')
        verbosity:
          enum:
            - summary
            - detailed
            - full
          type: string
          default: detailed
          description: Level of detail for 'fullOverview'
        diagramTypes:
          type: array
          items:
            type: string
          description: Specific diagram types to include (if empty and
            includeDiagrams=true, includes all)
        includeDiagrams:
          type: boolean
          default: true
          description: Include Mermaid diagrams (for 'fullOverview')
      additionalProperties: false
  - name: expandItem
    description: Helps break down an Epic, Task, or Subtask into smaller items.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - mode
        - instructions
        - basePath
      properties:
        mode:
          enum:
            - expandSpecificTask
            - expandSpecificSubtask
            - findExpandable
          type: string
          description: Expansion mode (required)
        count:
          type: number
          default: 5
          description: Number of subtasks to suggest (for prompts)
        epicId:
          type: string
          format: uuid
          description: ID of the Epic containing the Task/Subtask (optional, will try to
            find task otherwise)
        taskId:
          type: string
          format: uuid
          description: ID of the Task to expand (optional, suggests first expandable)
        taskIds:
          type: array
          items:
            type: string
            format: uuid
            description: The ID of the task.
          description: List of task IDs in the batch
        basePath:
          type: string
          description: FULL directory path for storage (required, e.g., '/path/to/storage')
        batchSize:
          type: number
          description: Total number of tasks in the batch
        subtaskId:
          type: string
          format: uuid
          description: ID of the Subtask to expand (optional, within the specified task)
        batchIndex:
          type: number
          description: Current task index in a batch expansion
        maxSubtasks:
          type: number
          default: 5
          description: Max subtasks threshold (for 'findExpandable')
        minSubtasks:
          type: number
          default: 3
          description: Min subtasks threshold (for 'findExpandable')
        instructions:
          type: string
      additionalProperties: false
  - name: manageItemStorage
    description: Manages storage configuration and export for Epics.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - action
        - basePath
        - outputDirectory
      properties:
        action:
          enum:
            - configure
            - getInfo
            - generateFiles
          type: string
        basePath:
          type: string
          description: FULL directory path for storage (required for all actions, e.g.,
            '/path/to/storage')
        outputDirectory:
          type: string
          description: FULL output directory path for generated files
      additionalProperties: false
  - name: planEpic
    description: Interactively creates a detailed implementation plan with
      hierarchical tasks and subtasks through sequential thinking, guiding the
      agent through multiple steps of refinement. Must be called BEFORE using
      the createEpic tool to ensure a comprehensive plan.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - description
      properties:
        basePath:
          type: string
          description: FULL base path for the implementation (optional)
        maxDepth:
          type: number
          description: "Maximum depth of subtask hierarchy (optional, default: 3)"
        configPath:
          type: string
          description: FULL path to custom plan configuration JSON file (optional)
        currentStep:
          type: number
          description: Current step in the sequential thinking process (internal use)
        description:
          type: string
          description: High-level description of what needs to be implemented
        planSummary:
          type: string
          description: Brief summary of planning progress so far (internal use)
        includeSubtasks:
          type: boolean
          description: "Whether to include creation of subtasks (default: true)"
        additionalContext:
          type: string
          description: Additional context or requirements for the implementation (optional)
        includeTestStrategy:
          type: boolean
          description: "Whether to include test strategy planning (optional, default: true)"
      additionalProperties: false
  - name: batchEpic
    description: Creates a complete Epic with multiple tasks, each potentially
      having multiple subtasks, in a single operation.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - description
        - tasks
        - basePath
      properties:
        tasks:
          type: array
          items:
            type: object
            required:
              - description
            properties:
              priority:
                $ref: "#/properties/priority"
                description: Priority of the task (optional)
              subtasks:
                type: array
                items:
                  type: object
                  required:
                    - description
                  properties:
                    description:
                      type: string
                      description: Description of the subtask
                  additionalProperties: false
                description: List of subtasks for this task (optional)
              complexity:
                type: number
                maximum: 10
                minimum: 1
                description: Complexity score from 1-10 (optional)
              description:
                type: string
                description: Description of the task
              dependencies:
                type: array
                items:
                  type: string
                description: IDs of other tasks this task depends on (optional)
              testStrategy:
                type: string
                description: Test strategy for this task (optional)
              implementationPlan:
                type: string
                description: Implementation plan for this task (optional)
            additionalProperties: false
          description: List of tasks for this Epic
        basePath:
          type: string
          description: FULL directory path where Epic storage will be created (required,
            e.g., '/path/to/storage')
        priority:
          enum:
            - low
            - medium
            - high
          type: string
          description: Priority of the Epic (optional)
        complexity:
          type: number
          maximum: 10
          minimum: 1
          description: Complexity score from 1-10 (optional)
        description:
          type: string
          description: High-level description of the Epic
        testStrategy:
          type: string
          description: Overall test strategy for the Epic (optional)
        implementationPlan:
          type: string
          description: Overall implementation plan for the Epic (optional)
      additionalProperties: false
  - name: createPlanningConfig
    description: Creates a JSON configuration file for the planEpic tool, allowing
      customization of planning steps and process
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - currentStep
      properties:
        configId:
          type: string
          description: ID of the configuration being built
        currentStep:
          type: integer
          minimum: 0
          description: Current step in the configuration building process
        partialConfig:
          type: object
          properties:
            name:
              type: string
            steps:
              type: array
              items:
                type: object
                required:
                  - id
                  - name
                  - description
                  - order
                  - instructions
                  - thinkingPrompts
                  - nextStepPrompt
                  - requiresPreviousStepData
                properties:
                  id:
                    type: string
                    description: Unique identifier for this step
                  name:
                    type: string
                    description: Display name for this step
                  order:
                    type: integer
                    minimum: 0
                    description: Order in the planning sequence (0-based)
                  description:
                    type: string
                    description: Description of what this step accomplishes
                  instructions:
                    type: array
                    items:
                      type: string
                    description: Instructions for this planning step
                  nextStepPrompt:
                    type: string
                    description: Prompt for moving to the next step
                  thinkingPrompts:
                    type: array
                    items:
                      type: string
                    description: Thinking prompts to aid reflection
                  requiresPreviousStepData:
                    type: boolean
                    description: Whether this step requires data from previous steps
                additionalProperties: false
            outputPath:
              type: string
              description: FULL path where the config should be saved (e.g.,
                '/path/to/config/myconfig.json')
            description:
              type: string
            defaultMaxDepth:
              type: integer
              minimum: 1
            includeTestStrategy:
              type: boolean
          description: Partial configuration built so far
          additionalProperties: false
        stepsCompleted:
          type: array
          items:
            type: string
          description: IDs of steps that have been completed
      additionalProperties: false
  - name: createDirectPlanningConfig
    description: Directly creates a JSON configuration file for planEpic from
      complete specifications
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - name
        - description
        - steps
        - outputPath
      properties:
        name:
          type: string
          description: Name of the planning configuration
        steps:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - description
              - order
              - instructions
              - thinkingPrompts
              - nextStepPrompt
              - requiresPreviousStepData
            properties:
              id:
                type: string
                description: Unique identifier for this step
              name:
                type: string
                description: Display name for this step
              order:
                type: integer
                minimum: 0
                description: Order in the planning sequence (0-based)
              description:
                type: string
                description: Description of what this step accomplishes
              instructions:
                type: array
                items:
                  type: string
                description: Instructions for this planning step
              nextStepPrompt:
                type: string
                description: Prompt for moving to the next step
              thinkingPrompts:
                type: array
                items:
                  type: string
                description: Thinking prompts to aid reflection
              requiresPreviousStepData:
                type: boolean
                description: Whether this step requires data from previous steps
            additionalProperties: false
          description: Steps to include in the planning process
        outputPath:
          type: string
          description: FULL path where the config should be saved (e.g.,
            '/path/to/config/myconfig.json')
        description:
          type: string
          description: Description of what this planning process does
        defaultMaxDepth:
          type: integer
          minimum: 1
          description: Default maximum task hierarchy depth
        includeTestStrategy:
          type: boolean
          description: Whether test strategy is included by default
      additionalProperties: false
