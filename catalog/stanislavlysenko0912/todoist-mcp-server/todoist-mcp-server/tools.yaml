tools:
  - name: get_tasks_list
    description: Get tasks list from Todoist
    inputSchema:
      type: object
      required: []
      properties:
        ids:
          type: string
          description: A list of the task IDs to retrieve, this should be a comma
            separated list
        label:
          type: string
          description: Filter by label name
        limit:
          type: number
          default: 50
          description: Maximum number of tasks to return, provided by server not api of
            todoist
        filter:
          type: string
          description: 'Natural language english filter like "search: keyword", "date:
            today", "date before: +4 hours", "date after: May 5", "no date", "no
            time", "overdue", "7 days & @waiting", "created before: -365 days",
            "assigned to: person", "added by: me", "#Project & !assigned",
            "subtask", "!subtask", "P1 | P2", "today & @email", "@work |
            @office", "(today | overdue) & #Work", "all & 7 days", "!assigned",
            "Today & !#Work"'
        project_id:
          type: string
          description: Filter tasks by project ID
        section_id:
          type: string
          description: Filter tasks by section ID
  - name: create_tasks
    description: Create tasks in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - content
            properties:
              order:
                type: integer
                description: Non-zero integer value used by clients to sort tasks under the same
                  parent
              labels:
                type: array
                items:
                  type: string
                description: The task's labels (a list of names that may represent either
                  personal or shared labels)
              content:
                type: string
                description: Task content. This value may contain markdown-formatted text and
                  hyperlinks
              due_date:
                type: string
                description: Specific date in YYYY-MM-DD format relative to user's timezone
              due_lang:
                type: string
                default: en
                description: 2-letter code specifying language in case due_string is not written
                  in English
              duration:
                type: integer
                description: A positive (greater than zero) integer for the amount of
                  duration_unit the task will take
              priority:
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                type: integer
                description: Task priority from 1 (normal) to 4 (urgent)
              parent_id:
                type: string
                description: Parent task ID
              due_string:
                type: string
                description: 'Human defined task due date (ex.: "next Monday", "Tomorrow").
                  Value is set using local (not UTC) time, if not in english
                  provided, due_lang should be set to the language of the
                  string'
              project_id:
                type: string
                description: Task project ID. If not set, task is put to user's Inbox
              section_id:
                type: string
                description: ID of section to put task into
              assignee_id:
                type: string
                description: The responsible user ID (only applies to shared tasks)
              description:
                type: string
                description: A description for the task. This value may contain
                  markdown-formatted text and hyperlinks
              due_datetime:
                type: string
                description: Specific date and time in RFC3339 format in UTC
              duration_unit:
                enum:
                  - minute
                  - day
                type: string
                description: The unit of time that the duration field represents. Must be either
                  minute or day
          description: Array of tasks to create
  - name: get_tasks
    description: Get a tasks from Todoist by ID or name
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - task_name
            properties:
              task_id:
                type: string
                description: ID of the task to retrieve (preferred)
              task_name:
                type: string
                description: Name of the task to retrieve (if ID not provided)
          description: Array of task identifiers to retrieve
  - name: update_tasks
    description: Update tasks in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - task_name
            properties:
              labels:
                type: array
                items:
                  type: string
                description: The task's labels (a list of names that may represent either
                  personal or shared labels)
              content:
                type: string
                description: Task content. This value may contain markdown-formatted text and
                  hyperlinks
              task_id:
                type: string
                description: ID of the task to update (preferred)
              due_date:
                type: string
                description: Specific date in YYYY-MM-DD format relative to user's timezone
              due_lang:
                type: string
                default: en
                description: 2-letter code specifying language in case due_string is not written
                  in English
              duration:
                type: integer
                description: A positive (greater than zero) integer for the amount of
                  duration_unit the task will take
              priority:
                enum:
                  - 1
                  - 2
                  - 3
                  - 4
                type: integer
                description: Task priority from 1 (normal) to 4 (urgent)
              task_name:
                type: string
                description: Name of the task to update (if ID not provided)
              due_string:
                type: string
                description: 'Human defined task due date (ex.: "next Monday", "Tomorrow").
                  Value is set using local (not UTC) time, if not in english
                  provided, due_lang should be set to the language of the
                  string'
              assignee_id:
                type: string
                description: The responsible user ID (only applies to shared tasks)
              description:
                type: string
                description: A description for the task. This value may contain
                  markdown-formatted text and hyperlinks
              due_datetime:
                type: string
                description: Specific date and time in RFC3339 format in UTC
              duration_unit:
                enum:
                  - minute
                  - day
                type: string
                description: The unit of time that the duration field represents. Must be either
                  minute or day
          description: Array of tasks to update
  - name: close_tasks
    description: Close tasks in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - task_name
            properties:
              task_id:
                type: string
                description: ID of the task to close (preferred)
              task_name:
                type: string
                description: Name of the task to close (if ID not provided)
          description: Array of tasks to close
  - name: reopen_tasks
    description: Reopen tasks in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - task_name
            properties:
              task_id:
                type: string
                description: ID of the task to reopen (preferred)
              task_name:
                type: string
                description: Name of the task to reopen (if ID not provided)
          description: Array of tasks to reopen
  - name: delete_tasks
    description: Delete tasks in Todoist, be careful, this action is irreversible
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - task_name
            properties:
              task_id:
                type: string
                description: ID of the task to delete (preferred)
              task_name:
                type: string
                description: Name of the task to delete (if ID not provided)
          description: Array of tasks to delete
  - name: move_tasks
    description: Move task in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - parent_id
              - required:
                  - section_id
              - required:
                  - project_id
            properties:
              task_id:
                type: string
                description: ID of the task to move (preferred)
              parent_id:
                type: string
                description: ID of the parent task to move the task to
              task_name:
                type: string
                description: Name of the task to move (if ID not provided)
              project_id:
                type: string
                description: ID of the project to move the task to
              section_id:
                type: string
                description: ID of the section to move the task to
          required:
            - id
          description: Array of tasks to move
          additionalDescription: "Set only one of: parent_id, section_id or project_id. To
            remove an item from a section, use only project_id with its current
            project value"
  - name: get_projects_list
    description: Get all projects from Todoist
    inputSchema:
      type: object
      required: []
  - name: create_projects
    description: Create new projects in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Name of the project
              color:
                type: string
                description: The color of the project icon. Refer to the name column in the
                  Colors guide for more info
              parent_id:
                type: string
                description: Parent project ID
              view_style:
                enum:
                  - list
                  - board
                type: string
                description: A string value, list default. This determines the way the project
                  is displayed
              is_favorite:
                type: boolean
                description: Whether the project is a favorite (a true or false value)
          description: Array of project objects to create
  - name: get_projects
    description: Get projects from Todoist by ID
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the project to retrieve
              name:
                type: string
                description: Name of the project to retrieve
          description: Array of project identifiers to retrieve
  - name: update_projects
    description: Update projects in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: ID of the project to update
              name:
                type: string
                description: Name of the project
              color:
                type: string
                description: The color of the project icon. Refer to the name column in the
                  Colors guide for more info
              view_style:
                enum:
                  - list
                  - board
                type: string
                description: A string value (either list or board). This determines the way the
                  project is displayed within the Todoist clients
              is_favorite:
                type: boolean
                description: Whether the project is a favorite (a true or false value)
          description: Array of project objects to update
          additionalDescription: At least one of name, color, is_favorite or view_style
            fields must be provided besides the required id
  - name: delete_projects
    description: Delete projects in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the project to delete (preferred over name)
              name:
                type: string
                description: Name of the project to delete
          description: Array of projects to delete
  - name: get_collaborators
    description: Get all collaborators for a project in Todoist
    inputSchema:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: ID of the project to get collaborators for
  - name: move_projects
    description: Move a projects to a different parent in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            required:
              - parent_id
            properties:
              id:
                type: string
                description: ID of the project to move (preferred over name)
              name:
                type: string
                description: Name of the project to move
              parent_id:
                type: string
                description: ID of the parent project to move this project under. Use null to
                  move to root level.
          description: Array of projects to move
  - name: get_sections_list
    description: Get all sections from Todoist
    inputSchema:
      type: object
      required: []
      properties:
        project_id:
          type: string
          description: Filter sections by project ID
  - name: create_sections
    description: Create new sections in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - name
              - project_id
            properties:
              name:
                type: string
                description: Section name
              order:
                type: integer
                description: Order among other sections in a project
              project_id:
                type: string
                description: Project ID this section should belong to
          description: Array of section objects to create
  - name: get_sections
    description: Get sections from Todoist by ID
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the section to retrieve (preferred over name)
              name:
                type: string
                description: Name of the section to retrieve
          description: Array of section identifiers to retrieve
  - name: update_sections
    description: Update sections in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: ID of the section to update
              name:
                type: string
                description: New section name
              order:
                type: integer
                description: New order among other sections in a project
          description: Array of section objects to update
  - name: delete_sections
    description: Delete sections in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the section to delete (preferred over name)
              name:
                type: string
                description: Name of the section to delete
          description: Array of sections to delete
  - name: get_comments_list
    description: Get all comments from Todoist
    inputSchema:
      type: object
      anyOf:
        - required:
            - project_id
        - required:
            - task_id
      required: []
      properties:
        task_id:
          type: string
          description: ID of the task used to filter comments
        project_id:
          type: string
          description: ID of the project used to filter comments
  - name: create_comments
    description: Create new comments in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - task_id
              - required:
                  - project_id
            required:
              - content
            properties:
              content:
                type: string
                description: Comment markdown-formatted text and hyperlinks
              task_id:
                type: string
                description: Comment's task ID (for task comments)
              project_id:
                type: string
                description: Comment's project ID (for project comments)
          description: Array of comment objects to create
  - name: get_comments
    description: Get comments from Todoist by ID
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: ID of the comment to retrieve
          description: Array of comment identifiers to retrieve
  - name: update_comments
    description: Update comments in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
              - content
            properties:
              id:
                type: string
                description: ID of the comment to update
              content:
                type: string
                description: New content, markdown-formatted text and hyperlinks
          description: Array of comment objects to update
  - name: delete_comments
    description: Delete comments in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: ID of the comment to delete
          description: Array of comments to delete
  - name: get_labels_list
    description: Get all personal labels from Todoist
    inputSchema:
      type: object
      required: []
  - name: create_labels
    description: Create a new personal labels in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Name of the label
              color:
                type: string
                description: The color of the label icon. Refer to the name column in the
                  `utils_get_colors` tool for more info
              order:
                type: integer
                description: Label order
              is_favorite:
                type: boolean
                description: Whether the label is a favorite (a true or false value)
          description: Array of labels objects to create
  - name: get_labels
    description: Get a personal labels from Todoist by ID
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the label to retrieve (preferred over name)
              name:
                type: string
                description: Name of the label to retrieve
          description: Array of label identifiers to retrieve
  - name: update_labels
    description: Update a personal label in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                description: ID of the label to update
              name:
                type: string
                description: New name of the label
              color:
                type: string
                description: The color of the label icon. Refer to the name column in the Colors
                  guide for more info
              order:
                type: integer
                description: Number that is used by clients to sort list of labels
              is_favorite:
                type: boolean
                description: Whether the label is a favorite (a true or false value)
          description: "Array of labels objects to update, need to provide at least one of
            the following: id, name"
          additionalDescription: At least one of name, order, color or is_favorite fields
            must be provided besides the required id
  - name: delete_labels
    description: Delete a personal labels in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            anyOf:
              - required:
                  - id
              - required:
                  - name
            properties:
              id:
                type: string
                description: ID of the label to delete (preferred over name)
              name:
                type: string
                description: Name of the label to delete
          description: Array of labels to delete
  - name: get_shared_labels
    description: Get all shared labels from Todoist
    inputSchema:
      type: object
      required: []
      properties: {}
  - name: rename_shared_labels
    description: Rename a shared labels in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - name
              - new_name
            properties:
              name:
                type: string
                description: The name of the existing label to rename
              new_name:
                type: string
                description: The new name for the label
          description: Array of shared labels objects to rename
  - name: remove_shared_labels
    description: Remove a shared labels in Todoist
    inputSchema:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: The name of the label to remove
          description: Array of labels objects to remove
  - name: utils_get_colors
    description: Get available colors for projects, labels, filters in Todoist
    inputSchema:
      type: object
