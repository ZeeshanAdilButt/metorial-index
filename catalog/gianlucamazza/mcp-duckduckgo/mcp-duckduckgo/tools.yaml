tools:
  - name: duckduckgo_web_search
    description: "

      \    Perform a web search using the DuckDuckGo search engine.

      \   \ 

      \    This tool searches the web using DuckDuckGo and returns relevant
      results.

      \    It's ideal for finding current information, news, articles, and
      general web content.

      \   \ 

      \    Args:

      \        query: The search query (max 400 chars, 50 words)

      \        count: Number of results per page (1-20, default 10)

      \        page: Page number for pagination (default 1)

      \        site: Limit results to a specific site (e.g., 'site:example.com')

      \        time_period: Filter results by time period ('day', 'week',
      'month', 'year')

      \        ctx: MCP context object (automatically injected)

      \       \ 

      \    Returns:

      \        A SearchResponse object containing search results and pagination
      metadata

      \   \ 

      \    Example:

      \        duckduckgo_web_search(query=\"latest AI developments\", count=5,
      page=1)

      \    "
    inputSchema:
      type: object
      title: duckduckgo_web_searchArguments
      required:
        - query
      properties:
        page:
          type: integer
          title: Page
          default: 1
          minimum: 1
          description: Page number (default 1)
        site:
          anyOf:
            - type: string
            - type: "null"
          title: Site
          default: null
          description: Limit results to a specific site (e.g., 'site:example.com')
        count:
          type: integer
          title: Count
          default: 10
          maximum: 20
          minimum: 1
          description: Number of results per page (1-20, default 10)
        query:
          type: string
          title: Query
          maxLength: 400
          description: Search query (max 400 chars, 50 words)
        time_period:
          anyOf:
            - type: string
            - type: "null"
          title: Time Period
          default: null
          description: Time period for results ('day', 'week', 'month', 'year')
  - name: duckduckgo_get_details
    description: "

      \    Get detailed information about a search result.

      \   \ 

      \    This tool retrieves additional details about a search result,

      \    such as the domain, title, description, and content snippet

      \    by fetching and parsing the actual web page. It can also\ 

      \    follow links to gather more comprehensive content.

      \   \ 

      \    Args:

      \        url: The URL of the result to get details for

      \        spider_depth: Number of links to follow (0-3, default 0)

      \        max_links_per_page: Maximum number of links to follow per page
      (1-5, default 3)

      \        same_domain_only: Only follow links to the same domain

      \        ctx: MCP context object (automatically injected)

      \       \ 

      \    Returns:

      \        A DetailedResult object with additional information

      \       \ 

      \    Example:

      \        duckduckgo_get_details(url=\"https://example.com/article\",
      spider_depth=1)

      \    "
    inputSchema:
      type: object
      title: duckduckgo_get_detailsArguments
      required:
        - url
      properties:
        url:
          type: string
          title: Url
        spider_depth:
          type: integer
          title: Spider Depth
          default: 0
          maximum: 3
          minimum: 0
          description: Number of links to follow from the page (0-3, default 0)
        same_domain_only:
          type: boolean
          title: Same Domain Only
          default: true
          description: Only follow links to the same domain
        max_links_per_page:
          type: integer
          title: Max Links Per Page
          default: 3
          maximum: 5
          minimum: 1
          description: Maximum number of links to follow per page (1-5, default 3)
  - name: duckduckgo_related_searches
    description: "

      \    Get related search queries for a given query.

      \   \ 

      \    This tool suggests alternative search queries related to

      \    the original query, which can help explore a topic more broadly.

      \   \ 

      \    Args:

      \        query: The original search query

      \        count: Number of related searches to return (1-10, default 5)

      \        ctx: MCP context object (automatically injected)

      \       \ 

      \    Returns:

      \        A list of related search queries

      \       \ 

      \    Example:

      \        duckduckgo_related_searches(query=\"artificial intelligence\",
      count=5)

      \    "
    inputSchema:
      type: object
      title: duckduckgo_related_searchesArguments
      required:
        - query
      properties:
        count:
          type: integer
          title: Count
          default: 5
          maximum: 10
          minimum: 1
          description: Number of related searches to return (1-10, default 5)
        query:
          type: string
          title: Query
          maxLength: 400
          description: Original search query
