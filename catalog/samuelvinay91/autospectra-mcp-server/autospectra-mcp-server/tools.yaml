tools:
  - name: navigate
    description: Navigate to a URL
    inputSchema:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: URL to navigate to
  - name: click
    description: Click on an element
    inputSchema:
      type: object
      required:
        - selector
      properties:
        selector:
          type: string
          description: CSS selector of the element
  - name: type
    description: Type text into an input field
    inputSchema:
      type: object
      required:
        - selector
        - text
      properties:
        text:
          type: string
          description: Text to type
        selector:
          type: string
          description: CSS selector of the input field
        clearFirst:
          type: boolean
          description: Clear the field before typing
  - name: extract
    description: Extract data from an element
    inputSchema:
      type: object
      required:
        - selector
      properties:
        selector:
          type: string
          description: CSS selector of the element
        attribute:
          type: string
          description: "Attribute to extract (default: textContent)"
  - name: screenshot
    description: Take a screenshot
    inputSchema:
      type: object
      properties:
        fullPage:
          type: boolean
          description: Whether to take a full page screenshot
  - name: check_accessibility
    description: Run accessibility tests on the current page
    inputSchema:
      type: object
      properties:
        rules:
          type: array
          items:
            type: string
          description: Specific accessibility rules to check
        includeHidden:
          type: boolean
          description: Whether to include hidden elements in the test
  - name: generate_tests
    description: Generate test cases for an application
    inputSchema:
      type: object
      required:
        - url
        - prompt
      properties:
        url:
          type: string
          description: URL of the application to analyze
        style:
          type: string
          description: Test style (e.g., bdd, tdd)
        format:
          type: string
          description: Output format (e.g., javascript, typescript)
        prompt:
          type: string
          description: Description of the test scenarios to generate
        framework:
          type: string
          description: Test framework to use (e.g., playwright, mocha, jest)
  - name: ai_process
    description: Process a task with AI to generate automation steps
    inputSchema:
      type: object
      required:
        - task
      properties:
        url:
          type: string
          description: URL context
        task:
          type: string
          description: Task description
  - name: self_healing_record
    description: Record a test session with self-healing selectors
    inputSchema:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: URL to start recording at
        outputFormat:
          type: string
          description: Output format (e.g., playwright, cypress)
  - name: visual_comparison
    description: Compare visual snapshots of a web page
    inputSchema:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: URL to compare
        threshold:
          type: number
          description: Comparison threshold (0-1)
        baselinePath:
          type: string
          description: Path to baseline image (if any)
  - name: list_frameworks
    description: Get a list of supported test frameworks, styles, and formats
    inputSchema:
      type: object
      properties: {}
  - name: api_request
    description: Make an HTTP request to an API endpoint
    inputSchema:
      type: object
      required:
        - method
        - url
      properties:
        url:
          type: string
          description: API endpoint URL
        auth:
          type: object
          description: Authentication details
        data:
          type: object
          description: Request body
        method:
          type: string
          description: HTTP method (GET, POST, PUT, DELETE)
        params:
          type: object
          description: URL parameters
        headers:
          type: object
          description: Request headers
  - name: validate_schema
    description: Validate API responses against schemas
    inputSchema:
      type: object
      required:
        - response
      properties:
        schema:
          type: object
          description: JSON schema to validate against
        response:
          type: object
          description: API response to validate
        schemaPath:
          type: string
          description: Path to schema file
  - name: create_mock
    description: Create mock API endpoints for testing
    inputSchema:
      type: object
      required:
        - endpoint
        - method
        - response
      properties:
        method:
          type: string
          description: HTTP method
        endpoint:
          type: string
          description: Endpoint path to mock
        response:
          type: object
          description: Mock response
        statusCode:
          type: number
          description: Response status code
  - name: graphql_request
    description: Make GraphQL requests
    inputSchema:
      type: object
      required:
        - endpoint
        - query
      properties:
        query:
          type: string
          description: GraphQL query
        headers:
          type: object
          description: Request headers
        endpoint:
          type: string
          description: GraphQL API endpoint
        variables:
          type: object
          description: Query variables
  - name: run_test
    description: Run a generated test file
    inputSchema:
      type: object
      required:
        - testPath
      properties:
        testPath:
          type: string
          description: Path to the test file to run
        installDeps:
          type: boolean
          description: Whether to install dependencies if needed
  - name: initialize_computer
    description: Initialize a computer use provider
    inputSchema:
      type: object
      required:
        - type
      properties:
        type:
          enum:
            - api
            - container
          type: string
          description: 'Provider type: "api" (direct API call) or "container" (Docker
            container with full Linux environment)'
        width:
          type: number
          description: Optional screen width (for container provider)
        apiKey:
          type: string
          description: Optional Anthropic API key (will use environment variable if not
            provided)
        height:
          type: number
          description: Optional screen height (for container provider)
        containerImage:
          type: string
          description: Optional container image to use (for container provider)
  - name: debug_test
    description: Create or update a debug test session for interactive development
    inputSchema:
      type: object
      required:
        - testName
      properties:
        breakAt:
          type: array
          items:
            type: string
          description: Step IDs to break execution at
        testName:
          type: string
          description: Name of the debug test
        testScript:
          type: string
          description: JavaScript test script containing step definitions
        clearPrevious:
          type: boolean
          description: Whether to clear any previous debug session with the same name
        runImmediately:
          type: boolean
          description: Whether to run the test immediately after creation
  - name: run_debug_test
    description: Run a debug test
    inputSchema:
      type: object
      required:
        - testName
      properties:
        toStep:
          type: number
          description: Index of the step to end execution at
        fromStep:
          type: number
          description: Index of the step to start execution from
        testName:
          type: string
          description: Name of the debug test to run
        runToBreakpoint:
          type: boolean
          description: Whether to pause execution at breakpoints
  - name: continue_debug_test
    description: Continue execution of a paused debug test
    inputSchema:
      type: object
      properties:
        steps:
          type: number
          description: Number of steps to execute before pausing again
        runToBreakpoint:
          type: boolean
          description: Whether to pause execution at breakpoints
  - name: modify_debug_step
    description: Add or modify a step in a debug test
    inputSchema:
      type: object
      required:
        - stepId
        - type
        - args
      properties:
        args:
          type: object
          description: Arguments for the step
        type:
          type: string
          description: Type of step (navigate, click, type, etc.)
        index:
          type: number
          description: Index to insert the step at (for new steps)
        stepId:
          type: string
          description: ID of the step to modify
        runAfter:
          type: boolean
          description: Whether to run the step immediately after modification
  - name: get_debug_state
    description: Get the current debug state including steps, logs, and screenshots
    inputSchema:
      type: object
      properties:
        includeStepResults:
          type: boolean
          description: Whether to include step results in the response
  - name: cleanup_debug_session
    description: Clean up debug session resources
    inputSchema:
      type: object
      properties: {}
  - name: use_computer
    description: Use Claude computer capabilities to perform complex tasks
    inputSchema:
      type: object
      required:
        - prompt
      properties:
        model:
          type: string
          description: "Claude model to use (default: claude-3-7-sonnet-20240307)"
        prompt:
          type: string
          description: Description of the computer task to perform
  - name: smart_computer_use
    description: Use computer capabilities with fallback to AutoSpectra automation tools
    inputSchema:
      type: object
      required:
        - prompt
      properties:
        model:
          type: string
          description: "Claude model to use (default: claude-3-7-sonnet-20240307)"
        prompt:
          type: string
          description: Description of the computer task to perform
        useAutomation:
          type: boolean
          description: "Whether to fall back to automation tools if computer use fails
            (default: true)"
  - name: cleanup_computer
    description: Clean up computer use provider resources
    inputSchema:
      type: object
      properties: {}
