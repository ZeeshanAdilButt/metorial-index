tools:
  - name: search_contacts
    description: "Search WhatsApp contacts by name or phone number.

      \   \ 

      \    Args:

      \        query: Search term to match against contact names or phone
      numbers

      \    "
    inputSchema:
      type: object
      title: search_contactsArguments
      required:
        - query
      properties:
        query:
          type: string
          title: Query
  - name: list_messages
    description: "Get WhatsApp messages matching specified criteria with optional
      context.

      \   \ 

      \    Args:

      \        after: Optional ISO-8601 formatted string to only return messages
      after this date

      \        before: Optional ISO-8601 formatted string to only return
      messages before this date

      \        sender_phone_number: Optional phone number to filter messages by
      sender

      \        chat_jid: Optional chat JID to filter messages by chat

      \        query: Optional search term to filter messages by content

      \        limit: Maximum number of messages to return (default 20)

      \        page: Page number for pagination (default 0)

      \        include_context: Whether to include messages before and after
      matches (default True)

      \        context_before: Number of messages to include before each match
      (default 1)

      \        context_after: Number of messages to include after each match
      (default 1)

      \    "
    inputSchema:
      type: object
      title: list_messagesArguments
      properties:
        page:
          type: integer
          title: Page
          default: 0
        after:
          anyOf:
            - type: string
            - type: "null"
          title: After
          default: null
        limit:
          type: integer
          title: Limit
          default: 20
        query:
          anyOf:
            - type: string
            - type: "null"
          title: Query
          default: null
        before:
          anyOf:
            - type: string
            - type: "null"
          title: Before
          default: null
        chat_jid:
          anyOf:
            - type: string
            - type: "null"
          title: Chat Jid
          default: null
        context_after:
          type: integer
          title: Context After
          default: 1
        context_before:
          type: integer
          title: Context Before
          default: 1
        include_context:
          type: boolean
          title: Include Context
          default: true
        sender_phone_number:
          anyOf:
            - type: string
            - type: "null"
          title: Sender Phone Number
          default: null
  - name: list_chats
    description: "Get WhatsApp chats matching specified criteria.

      \   \ 

      \    Args:

      \        query: Optional search term to filter chats by name or JID

      \        limit: Maximum number of chats to return (default 20)

      \        page: Page number for pagination (default 0)

      \        include_last_message: Whether to include the last message in each
      chat (default True)

      \        sort_by: Field to sort results by, either \"last_active\" or
      \"name\" (default \"last_active\")

      \    "
    inputSchema:
      type: object
      title: list_chatsArguments
      properties:
        page:
          type: integer
          title: Page
          default: 0
        limit:
          type: integer
          title: Limit
          default: 20
        query:
          anyOf:
            - type: string
            - type: "null"
          title: Query
          default: null
        sort_by:
          type: string
          title: Sort By
          default: last_active
        include_last_message:
          type: boolean
          title: Include Last Message
          default: true
  - name: get_chat
    description: "Get WhatsApp chat metadata by JID.

      \   \ 

      \    Args:

      \        chat_jid: The JID of the chat to retrieve

      \        include_last_message: Whether to include the last message
      (default True)

      \    "
    inputSchema:
      type: object
      title: get_chatArguments
      required:
        - chat_jid
      properties:
        chat_jid:
          type: string
          title: Chat Jid
        include_last_message:
          type: boolean
          title: Include Last Message
          default: true
  - name: get_direct_chat_by_contact
    description: "Get WhatsApp chat metadata by sender phone number.

      \   \ 

      \    Args:

      \        sender_phone_number: The phone number to search for

      \    "
    inputSchema:
      type: object
      title: get_direct_chat_by_contactArguments
      required:
        - sender_phone_number
      properties:
        sender_phone_number:
          type: string
          title: Sender Phone Number
  - name: get_contact_chats
    description: "Get all WhatsApp chats involving the contact.

      \   \ 

      \    Args:

      \        jid: The contact's JID to search for

      \        limit: Maximum number of chats to return (default 20)

      \        page: Page number for pagination (default 0)

      \    "
    inputSchema:
      type: object
      title: get_contact_chatsArguments
      required:
        - jid
      properties:
        jid:
          type: string
          title: Jid
        page:
          type: integer
          title: Page
          default: 0
        limit:
          type: integer
          title: Limit
          default: 20
  - name: get_last_interaction
    description: "Get most recent WhatsApp message involving the contact.

      \   \ 

      \    Args:

      \        jid: The JID of the contact to search for

      \    "
    inputSchema:
      type: object
      title: get_last_interactionArguments
      required:
        - jid
      properties:
        jid:
          type: string
          title: Jid
  - name: get_message_context
    description: "Get context around a specific WhatsApp message.

      \   \ 

      \    Args:

      \        message_id: The ID of the message to get context for

      \        before: Number of messages to include before the target message
      (default 5)

      \        after: Number of messages to include after the target message
      (default 5)

      \    "
    inputSchema:
      type: object
      title: get_message_contextArguments
      required:
        - message_id
      properties:
        after:
          type: integer
          title: After
          default: 5
        before:
          type: integer
          title: Before
          default: 5
        message_id:
          type: string
          title: Message Id
  - name: send_message
    description: "Send a WhatsApp message to a person or group. For group chats use
      the JID.


      \    Args:

      \        recipient: The recipient - either a phone number with country
      code but no + or other symbols,

      \                 or a JID (e.g., \"123456789@s.whatsapp.net\" or a group
      JID like \"123456789@g.us\")

      \        message: The message text to send

      \   \ 

      \    Returns:

      \        A dictionary containing success status and a status message

      \    "
    inputSchema:
      type: object
      title: send_messageArguments
      required:
        - recipient
        - message
      properties:
        message:
          type: string
          title: Message
        recipient:
          type: string
          title: Recipient
  - name: send_file
    description: "Send a file such as a picture, raw audio, video or document via
      WhatsApp to the specified recipient. For group messages use the JID.

      \   \ 

      \    Args:

      \        recipient: The recipient - either a phone number with country
      code but no + or other symbols,

      \                 or a JID (e.g., \"123456789@s.whatsapp.net\" or a group
      JID like \"123456789@g.us\")

      \        media_path: The absolute path to the media file to send (image,
      video, document)

      \   \ 

      \    Returns:

      \        A dictionary containing success status and a status message

      \    "
    inputSchema:
      type: object
      title: send_fileArguments
      required:
        - recipient
        - media_path
      properties:
        recipient:
          type: string
          title: Recipient
        media_path:
          type: string
          title: Media Path
  - name: send_audio_message
    description: "Send any audio file as a WhatsApp audio message to the specified
      recipient. For group messages use the JID. If it errors due to ffmpeg not
      being installed, use send_file instead.

      \   \ 

      \    Args:

      \        recipient: The recipient - either a phone number with country
      code but no + or other symbols,

      \                 or a JID (e.g., \"123456789@s.whatsapp.net\" or a group
      JID like \"123456789@g.us\")

      \        media_path: The absolute path to the audio file to send (will be
      converted to Opus .ogg if it's not a .ogg file)

      \   \ 

      \    Returns:

      \        A dictionary containing success status and a status message

      \    "
    inputSchema:
      type: object
      title: send_audio_messageArguments
      required:
        - recipient
        - media_path
      properties:
        recipient:
          type: string
          title: Recipient
        media_path:
          type: string
          title: Media Path
  - name: download_media
    description: "Download media from a WhatsApp message and get the local file
      path.

      \   \ 

      \    Args:

      \        message_id: The ID of the message containing the media

      \        chat_jid: The JID of the chat containing the message

      \   \ 

      \    Returns:

      \        A dictionary containing success status, a status message, and the
      file path if successful

      \    "
    inputSchema:
      type: object
      title: download_mediaArguments
      required:
        - message_id
        - chat_jid
      properties:
        chat_jid:
          type: string
          title: Chat Jid
        message_id:
          type: string
          title: Message Id
