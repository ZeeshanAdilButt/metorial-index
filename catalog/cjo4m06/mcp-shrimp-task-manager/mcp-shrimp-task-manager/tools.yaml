tools:
  - name: plan_task
    description: >
      Initialize and plan task processes in detail, establish clear goals and
      success criteria, optionally reference existing tasks for continued
      planning
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - description
      properties:
        description:
          type: string
          minLength: 10
          description: 完整詳細的任務問題描述，應包含任務目標、背景及預期成果
        requirements:
          type: string
          description: 任務的特定技術要求、業務約束條件或品質標準（選填）
        existingTasksReference:
          type: boolean
          default: false
          description: 是否參考現有任務作為規劃基礎，用於任務調整和延續性規劃
      additionalProperties: false
  - name: analyze_task
    description: >
      Deeply analyze task requirements and systematically examine the codebase,
      assess technical feasibility and potential risks, if code needs to be
      provided use pseudocode format and only provide high-level logic flow and
      key steps avoiding complete code
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - summary
        - initialConcept
      properties:
        summary:
          type: string
          minLength: 10
          description: 結構化的任務摘要，包含任務目標、範圍與關鍵技術挑戰，最少10個字符
        initialConcept:
          type: string
          minLength: 50
          description: 最少50個字符的初步解答構想，包含技術方案、架構設計和實施策略，如果需要提供程式碼請使用 pseudocode
            格式且僅提供高級邏輯流程和關鍵步驟避免完整代碼
        previousAnalysis:
          type: string
          description: 前次迭代的分析結果，用於持續改進方案（僅在重新分析時需提供）
      additionalProperties: false
  - name: reflect_task
    description: >
      Critically review analysis results, assess solution completeness and
      identify optimization opportunities, ensure solutions conform to best
      practices, if code needs to be provided use pseudocode format and only
      provide high-level logic flow and key steps avoiding complete code
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - summary
        - analysis
      properties:
        summary:
          type: string
          minLength: 10
          description: 結構化的任務摘要，保持與分析階段一致以確保連續性
        analysis:
          type: string
          minLength: 100
          description: 完整詳盡的技術分析結果，包括所有技術細節、依賴組件和實施方案，如果需要提供程式碼請使用 pseudocode
            格式且僅提供高級邏輯流程和關鍵步驟避免完整代碼
      additionalProperties: false
  - name: split_tasks
    description: >
      Break down complex tasks into independent subtasks, establishing
      dependencies and priorities.


      ## 1. **Granularity Control (Required Reading)**


      - ### **Minimum Viable Task**

        Each subtask should be completable and verifiable by a single developer within **1–2 working days** (approximately 8–16 hours).

      - ### **Maximum Complexity Limitation**

        A single subtask should not span multiple technical domains such as **frontend**, **backend**, and **database**.  
        If cross-domain work is required, split it into multiple subtasks.

      - ### **Recommended Number of Tasks**

        Avoid splitting into more than **10 subtasks** at once.  
        If more are needed, submit them in prioritized batches (6–8 tasks per batch).

      - ### **Recommended Task Length**

        Each split should not exceed **5,000 characters**.  
        If it does, divide and submit in multiple batches.

      - ### **Depth Limitation**
        The task tree should not exceed **3 levels**:
        - **Level 1**: Functional Modules
        - **Level 2**: Main Processes
        - **Level 3**: Key Steps

      ## 2. **Task Splitting Example**


      - Identify **core functionality points**, and create a subtask for each.

      - Annotate each subtask with:
        - **Input/Output**
        - **Acceptance Criteria**
      - If needed, provide **pseudocode**:
        - Only outline high-level logic and key steps.
        - Avoid providing complete source code.
      - Check **dependencies** between subtasks and specify them in the
      `dependencies` field.


      ## 3. **Dependencies and Prioritization**


      - Mark each subtask with its `dependencies` list.

      - Automatically compute and enforce execution order based on the
      dependency graph to prioritize the **critical path**.


      ## 4. **Update Mode Explanation (`updateMode`)**


      When you need to create a new task that is not related to the current task
      list, be sure to use `clearAllTasks` to avoid task confusion.


      - `append`: Keep existing unfinished tasks and add new ones.

      - `overwrite`: Delete all unfinished tasks, keep completed ones.

      - `selective`: Smart-match and update tasks by name.

      - `clearAllTasks`: Clear all tasks and automatically back up the current
      list.


      ---


      ## 5. **Strict JSON Rules**


      - ### **No Comments Allowed**

        JSON does not support comments.  
        Any use of `#` or `//` will cause parsing failures.

      - ### **Proper Escaping Required**
        All special characters (e.g., double quotes `\"`, backslashes `\\`) must be properly escaped,  
        or they will be considered invalid.
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - updateMode
        - tasks
      properties:
        tasks:
          type: array
          items:
            type: object
            required:
              - name
              - description
              - implementationGuide
            properties:
              name:
                type: string
                maxLength: 100
                description: 簡潔明確的任務名稱，應能清晰表達任務目的
              notes:
                type: string
                description: 補充說明、特殊處理要求或實施建議（選填）
              description:
                type: string
                minLength: 10
                description: 詳細的任務描述，包含實施要點、技術細節和驗收標準
              dependencies:
                type: array
                items:
                  type: string
                description: 此任務依賴的前置任務ID或任務名稱列表，支持兩種引用方式，名稱引用更直觀，是一個字串陣列
              relatedFiles:
                type: array
                items:
                  type: object
                  required:
                    - path
                    - type
                    - description
                  properties:
                    path:
                      type: string
                      minLength: 1
                      description: 文件路徑，可以是相對於項目根目錄的路徑或絕對路徑
                    type:
                      enum:
                        - TO_MODIFY
                        - REFERENCE
                        - CREATE
                        - DEPENDENCY
                        - OTHER
                      type: string
                      description: "文件類型 (TO_MODIFY: 待修改, REFERENCE: 參考資料, CREATE: 待建立, DEPENDENCY:
                        依賴文件, OTHER: 其他)"
                    lineEnd:
                      type: integer
                      description: 相關代碼區塊的結束行（選填）
                      exclusiveMinimum: 0
                    lineStart:
                      type: integer
                      description: 相關代碼區塊的起始行（選填）
                      exclusiveMinimum: 0
                    description:
                      type: string
                      minLength: 1
                      description: 文件描述，用於說明文件的用途和內容
                  additionalProperties: false
                description: 與任務相關的文件列表，用於記錄與任務相關的代碼文件、參考資料、要建立的文件等（選填）
              implementationGuide:
                type: string
                description: 此特定任務的具體實現方法和步驟，請參考之前的分析結果提供精簡pseudocode
              verificationCriteria:
                type: string
                description: 此特定任務的驗證標準和檢驗方法
            additionalProperties: false
          minItems: 1
          description: 結構化的任務清單，每個任務應保持原子性且有明確的完成標準，避免過於簡單的任務，簡單修改可與其他任務整合，避免任務過多
        updateMode:
          enum:
            - append
            - overwrite
            - selective
            - clearAllTasks
          type: string
          description: |-
            任務更新模式選擇：'append'(保留所有現有任務並添加新任務)、'overwrite'(清除所有未完成任務並完全替換，保留已完成任務)、'selective'(智能更新：根據任務名稱匹配更新現有任務，保留不在列表中的任務，推薦用於任務微調)、'clearAllTasks'(清除所有任務並創建備份)。
            預設為'clearAllTasks'模式，只有用戶要求變更或修改計劃內容才使用其他模式
        globalAnalysisResult:
          type: string
          description: 全局分析結果：來自 reflect_task 的完整分析結果，適用於所有任務的通用部分
      additionalProperties: false
  - name: list_tasks
    description: >
      Generate structured task lists, including complete status tracking,
      priorities, and dependencies
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - status
      properties:
        status:
          enum:
            - all
            - pending
            - in_progress
            - completed
          type: string
          description: 要列出的任務狀態，可選擇 'all' 列出所有任務，或指定具體狀態
      additionalProperties: false
  - name: execute_task
    description: >
      Execute specific tasks according to the predefined plan, ensuring the
      output of each step meets quality standards
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - taskId
      properties:
        taskId:
          type: string
          format: uuid
          description: 待執行任務的唯一標識符，必須是系統中存在的有效任務ID
      additionalProperties: false
  - name: verify_task
    description: >
      ## Verify Task


      Please comprehensively check and score according to the requirements in
      verificationCriteria,

      If you are missing or have forgotten the verificationCriteria content,
      please use `get_task_detail` to obtain it.


      Please score according to the following rules:


      ### Verification Standards


      1. **Requirements Compliance(30%)** - Functionality completeness,
      constraint adherence, edge case handling

      2. **Technical Quality(30%)** - Architectural consistency, code
      robustness, implementation elegance

      3. **Integration Compatibility(20%)** - System integration,
      interoperability, compatibility maintenance

      4. **Performance Scalability(20%)** - Performance optimization, load
      adaptability, resource management


      ### score Parameter Guidelines


      Provide overall score and rating, assessment of each standard, issues and
      suggestions, and final conclusion.


      **Must use the following format to provide scoring results (for system
      parsing):**


      ```Scoring

      score: [number from 0-100]

      ```


      ### summary Parameter Guidelines


      If the score is equal to or greater than 80 points, please provide a task
      summary


      ```

      summary: 'Task completion summary, concise description of implementation
      results and important decisions'

      ```


      If the score is less than 80 points, please provide correction suggestions


      ```

      summary: 'List task issues and correction suggestions'

      ```
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - taskId
        - summary
        - score
      properties:
        score:
          type: number
          maximum: 100
          minimum: 0
          description: 針對任務的評分，當評分等於或超過80分時自動完成任務
        taskId:
          type: string
          format: uuid
          description: 待驗證任務的唯一標識符，必須是系統中存在的有效任務ID
        summary:
          type: string
          minLength: 30
          description: 當分數高於或等於 80分時代表任務完成摘要，簡潔描述實施結果和重要決策，當分數低於 80分時代表缺失或需要修正的部分說明，最少30個字
      additionalProperties: false
  - name: delete_task
    description: >
      Delete incomplete tasks, but does not allow deleting completed tasks,
      ensuring the integrity of system records
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - taskId
      properties:
        taskId:
          type: string
          format: uuid
          description: 待刪除任務的唯一標識符，必須是系統中存在且未完成的任務ID
      additionalProperties: false
  - name: clear_all_tasks
    description: |
      Clear incomplete tasks and reset the task list
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - confirm
      properties:
        confirm:
          type: boolean
          description: 確認刪除所有未完成的任務（此操作不可逆）
      additionalProperties: false
  - name: update_task
    description: >
      Update task content, including name, description and notes, dependent
      tasks, related files, implementation guide, and verification criteria,
      completed tasks only allow updating summary and related files
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - taskId
      properties:
        name:
          type: string
          description: 任務的新名稱（選填）
        notes:
          type: string
          description: 任務的新補充說明（選填）
        taskId:
          type: string
          format: uuid
          description: 待更新任務的唯一標識符，必須是系統中存在且未完成的任務ID
        description:
          type: string
          description: 任務的新描述內容（選填）
        dependencies:
          type: array
          items:
            type: string
          description: 任務的新依賴關係（選填）
        relatedFiles:
          type: array
          items:
            type: object
            required:
              - path
              - type
            properties:
              path:
                type: string
                minLength: 1
                description: 文件路徑，可以是相對於項目根目錄的路徑或絕對路徑
              type:
                enum:
                  - TO_MODIFY
                  - REFERENCE
                  - CREATE
                  - DEPENDENCY
                  - OTHER
                type: string
                description: 文件與任務的關係類型 (TO_MODIFY, REFERENCE, CREATE, DEPENDENCY, OTHER)
              lineEnd:
                type: integer
                description: 相關代碼區塊的結束行（選填）
                exclusiveMinimum: 0
              lineStart:
                type: integer
                description: 相關代碼區塊的起始行（選填）
                exclusiveMinimum: 0
              description:
                type: string
                description: 文件的補充描述（選填）
            additionalProperties: false
          description: 與任務相關的文件列表，用於記錄與任務相關的代碼文件、參考資料、要建立的檔案等（選填）
        implementationGuide:
          type: string
          description: 任務的新實現指南（選填）
        verificationCriteria:
          type: string
          description: 任務的新驗證標準（選填）
      additionalProperties: false
  - name: query_task
    description: >
      Search for tasks based on keywords or ID, display abbreviated task
      information
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - query
      properties:
        isId:
          type: boolean
          default: false
          description: 指定是否為ID查詢模式，默認為否（關鍵字模式）
        page:
          type: integer
          default: 1
          description: 分頁頁碼，默認為第1頁
          exclusiveMinimum: 0
        query:
          type: string
          minLength: 1
          description: 搜尋查詢文字，可以是任務ID或多個關鍵字（空格分隔）
        pageSize:
          type: integer
          default: 5
          maximum: 20
          minimum: 1
          description: 每頁顯示的任務數量，默認為5筆，最大20筆
          exclusiveMinimum: 0
      additionalProperties: false
  - name: get_task_detail
    description: >
      Retrieve complete detailed information of a task based on task ID,
      including untruncated implementation guides and verification criteria
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - taskId
      properties:
        taskId:
          type: string
          minLength: 1
          description: 欲檢視詳情的任務ID
      additionalProperties: false
  - name: process_thought
    description: >
      Conduct flexible and evolvable thinking processes, progressively deepen
      understanding and generate effective solutions through establishing,
      questioning, verifying, and correcting ideas. When encountering situations
      requiring data collection, analysis, or research, prioritize reviewing
      project-related code; if relevant code does not exist, query the web
      rather than speculate. Set nextThoughtNeeded to false when thinking is
      sufficient, otherwise adjust total_thoughts to extend the process
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      required:
        - thought
        - thought_number
        - total_thoughts
        - next_thought_needed
        - stage
      properties:
        tags:
          type: array
          items:
            type: string
          description: 思維標籤，是一個陣列字串
        stage:
          type: string
          minLength: 1
          description: 思考階段，可以選擇的階段有：問題定義、收集資訊、研究、分析、綜合、結論、質疑、規劃
        thought:
          type: string
          minLength: 1
          description: 思維內容
        axioms_used:
          type: array
          items:
            type: string
          description: 使用的公理，是一個陣列字串
        thought_number:
          type: integer
          description: 當前思維編號
          exclusiveMinimum: 0
        total_thoughts:
          type: integer
          description: 預計總思維數量，如果需要更多的思考可以隨時變更
          exclusiveMinimum: 0
        next_thought_needed:
          type: boolean
          description: 是否需要下一步思維
        assumptions_challenged:
          type: array
          items:
            type: string
          description: 挑戰的假設，是一個陣列字串
      additionalProperties: false
  - name: init_project_rules
    description: >
      Initialize project standards, call this tool when the user requests to
      generate or initialize a project standards document, also call this tool
      if the user requests to change or update project standards
    inputSchema:
      type: object
      $schema: http://json-schema.org/draft-07/schema#
      properties: {}
      additionalProperties: false
